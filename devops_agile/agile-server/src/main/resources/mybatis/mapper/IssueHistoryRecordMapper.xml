<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.issue.dao.IssueHistoryRecordMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.issue.domain.IssueHistoryRecord">
    <id column="record_id" jdbcType="BIGINT" property="recordId" />
    <result column="operation_field" jdbcType="VARCHAR" property="operationField" />
    <result column="issue_id" jdbcType="BIGINT" property="issueId" />
    <result column="record_type" jdbcType="TINYINT" property="recordType" />
    <result column="is_custom" jdbcType="TINYINT" property="isCustom" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="old_value" jdbcType="LONGVARCHAR" property="oldValue" />
    <result column="new_value" jdbcType="LONGVARCHAR" property="newValue" />
    <result column="stay_days" jdbcType="INTEGER" property="stayDays" />
  </resultMap>
  <resultMap id="BaseResultMapDTO" type="com.yusys.agile.issue.dto.IssueHistoryRecordDTO">
    <id column="record_id" jdbcType="BIGINT" property="recordId" />
    <result column="operation_field" jdbcType="VARCHAR" property="operationField" />
    <result column="issue_id" jdbcType="BIGINT" property="issueId" />
    <result column="record_type" jdbcType="TINYINT" property="recordType" />
    <result column="is_custom" jdbcType="TINYINT" property="isCustom" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="old_value" jdbcType="LONGVARCHAR" property="oldValue" />
    <result column="new_value" jdbcType="LONGVARCHAR" property="newValue" />
    <result column="stay_days" jdbcType="INTEGER" property="stayDays" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="item" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, operation_field, issue_id, record_type, is_custom, label, create_time, 
    create_uid, old_value, new_value, stay_days,tenant_code
  </sql>

  <select id="selectByExample" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleDTO" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecordExample" resultMap="BaseResultMapDTO">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from issue_history_record
    where record_id = #{recordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from issue_history_record
    where record_id = #{recordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecordExample">
    delete from issue_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecord" useGeneratedKeys="true" keyProperty="recordId">
    insert into issue_history_record (record_id, operation_field, issue_id, 
      record_type, is_custom, label, 
      create_time, create_uid, old_value, 
      new_value, stay_days,tenant_code)
    values (#{recordId,jdbcType=BIGINT}, #{operationField,jdbcType=VARCHAR}, #{issueId,jdbcType=BIGINT}, 
      #{recordType,jdbcType=TINYINT}, #{isCustom,jdbcType=TINYINT}, #{label,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUid,jdbcType=BIGINT}, #{oldValue,jdbcType=LONGVARCHAR}, 
      #{newValue,jdbcType=LONGVARCHAR}, #{stayDays,jdbcType=INTEGER},#{tenantCode})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecord">
    insert into issue_history_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="operationField != null">
        operation_field,
      </if>
      <if test="issueId != null">
        issue_id,
      </if>
      <if test="recordType != null">
        record_type,
      </if>
      <if test="isCustom != null">
        is_custom,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="oldValue != null">
        old_value,
      </if>
      <if test="newValue != null">
        new_value,
      </if>
      <if test="stayDays != null">
        stay_days,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=BIGINT},
      </if>
      <if test="operationField != null">
        #{operationField,jdbcType=VARCHAR},
      </if>
      <if test="issueId != null">
        #{issueId,jdbcType=BIGINT},
      </if>
      <if test="recordType != null">
        #{recordType,jdbcType=TINYINT},
      </if>
      <if test="isCustom != null">
        #{isCustom,jdbcType=TINYINT},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="oldValue != null">
        #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null">
        #{newValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="stayDays != null">
        #{stayDays,jdbcType=INTEGER},
      </if>
      <if test="tenantCode != null">
        #{tenantCode},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecordExample" resultType="java.lang.Long">
    select count(*) from issue_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update issue_history_record
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=BIGINT},
      </if>
      <if test="record.operationField != null">
        operation_field = #{record.operationField,jdbcType=VARCHAR},
      </if>
      <if test="record.issueId != null">
        issue_id = #{record.issueId,jdbcType=BIGINT},
      </if>
      <if test="record.recordType != null">
        record_type = #{record.recordType,jdbcType=TINYINT},
      </if>
      <if test="record.isCustom != null">
        is_custom = #{record.isCustom,jdbcType=TINYINT},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.oldValue != null">
        old_value = #{record.oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.newValue != null">
        new_value = #{record.newValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.stayDays != null">
        #{record.stayDays,jdbcType=INTEGER},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update issue_history_record
    set record_id = #{record.recordId,jdbcType=BIGINT},
      operation_field = #{record.operationField,jdbcType=VARCHAR},
      issue_id = #{record.issueId,jdbcType=BIGINT},
      record_type = #{record.recordType,jdbcType=TINYINT},
      is_custom = #{record.isCustom,jdbcType=TINYINT},
      label = #{record.label,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      old_value = #{record.oldValue,jdbcType=LONGVARCHAR},
      new_value = #{record.newValue,jdbcType=LONGVARCHAR},
      stay_days = #{record.stayDays,jdbcType=INTEGER},
    tenant_code = #{record.tenantCode}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update issue_history_record
    set record_id = #{record.recordId,jdbcType=BIGINT},
      operation_field = #{record.operationField,jdbcType=VARCHAR},
      issue_id = #{record.issueId,jdbcType=BIGINT},
      record_type = #{record.recordType,jdbcType=TINYINT},
      is_custom = #{record.isCustom,jdbcType=TINYINT},
      label = #{record.label,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      stay_days = #{record.stayDays,jdbcType=INTEGER},
    tenant_code = #{record.tenantCode}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecord">
    update issue_history_record
    <set>
      <if test="operationField != null">
        operation_field = #{operationField,jdbcType=VARCHAR},
      </if>
      <if test="issueId != null">
        issue_id = #{issueId,jdbcType=BIGINT},
      </if>
      <if test="recordType != null">
        record_type = #{recordType,jdbcType=TINYINT},
      </if>
      <if test="isCustom != null">
        is_custom = #{isCustom,jdbcType=TINYINT},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="oldValue != null">
        old_value = #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null">
        new_value = #{newValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="stayDays != null">
        stay_days = #{stayDays,jdbcType=INTEGER},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecord">
    update issue_history_record
    set operation_field = #{operationField,jdbcType=VARCHAR},
      issue_id = #{issueId,jdbcType=BIGINT},
      record_type = #{recordType,jdbcType=TINYINT},
      is_custom = #{isCustom,jdbcType=TINYINT},
      label = #{label,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_uid = #{createUid,jdbcType=BIGINT},
      old_value = #{oldValue,jdbcType=LONGVARCHAR},
      new_value = #{newValue,jdbcType=LONGVARCHAR},
      stay_days = #{stayDays,jdbcType=INTEGER},
      tenant_code = #{tenantCode}
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.issue.domain.IssueHistoryRecord">
    update issue_history_record
    set operation_field = #{operationField,jdbcType=VARCHAR},
      issue_id = #{issueId,jdbcType=BIGINT},
      record_type = #{recordType,jdbcType=TINYINT},
      is_custom = #{isCustom,jdbcType=TINYINT},
      label = #{label,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_uid = #{createUid,jdbcType=BIGINT},
      stay_days = #{stayDays,jdbcType=INTEGER},
       tenant_code = #{tenantCode}
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>

  <delete id="deleteByTaskId">
    DELETE FROM issue_history_record WHERE issue_id = #{issueId}
  </delete>
  <insert id="createBatchHistory">
    INSERT INTO issue_history_record (operation_field, issue_id,record_type, is_custom, label,create_time, old_value,new_value,stay_days,create_uid,tenant_code)
    VALUES
    <foreach collection="history" item="item" separator=",">
      (#{item.operationField},#{item.issueId},#{item.recordType},#{item.isCustom},#{item.label},now(),#{item.oldValue},#{item.newValue},#{item.stayDays},#{item.createUid},#{item.tenantCode})
    </foreach>
  </insert>
</mapper>