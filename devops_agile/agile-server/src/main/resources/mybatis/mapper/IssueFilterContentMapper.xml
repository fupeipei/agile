<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.issue.dao.IssueFilterContentMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.issue.domain.IssueFilterContent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="filter_id" jdbcType="BIGINT" property="filterId" />
    <result column="field_code" jdbcType="VARCHAR" property="fieldCode" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.issue.domain.IssueFilterContent">
    <result column="field_value" jdbcType="LONGVARCHAR" property="fieldValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, filter_id, field_code, field_name,tenant_code
  </sql>
  <sql id="Blob_Column_List">
    field_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.issue.domain.IssueFilterContentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from issue_filter_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.issue.domain.IssueFilterContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue_filter_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from issue_filter_content
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from issue_filter_content
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.issue.domain.IssueFilterContentExample">
    delete from issue_filter_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.issue.domain.IssueFilterContent" useGeneratedKeys="true" keyProperty="id">
    insert into issue_filter_content (id, filter_id, field_code, 
      field_name, field_value,tenant_code)
    values (#{id,jdbcType=BIGINT}, #{filterId,jdbcType=BIGINT}, #{fieldCode,jdbcType=VARCHAR}, 
      #{fieldName,jdbcType=VARCHAR}, #{fieldValue,jdbcType=LONGVARCHAR},#{tenantCode})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.issue.domain.IssueFilterContent">
    insert into issue_filter_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="filterId != null">
        filter_id,
      </if>
      <if test="fieldCode != null">
        field_code,
      </if>
      <if test="fieldName != null">
        field_name,
      </if>
      <if test="fieldValue != null">
        field_value,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="filterId != null">
        #{filterId,jdbcType=BIGINT},
      </if>
      <if test="fieldCode != null">
        #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="fieldValue != null">
        #{fieldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.issue.domain.IssueFilterContentExample" resultType="java.lang.Long">
    select count(*) from issue_filter_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update issue_filter_content
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.filterId != null">
        filter_id = #{record.filterId,jdbcType=BIGINT},
      </if>
      <if test="record.fieldCode != null">
        field_code = #{record.fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldName != null">
        field_name = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldValue != null">
        field_value = #{record.fieldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update issue_filter_content
    set id = #{record.id,jdbcType=BIGINT},
      filter_id = #{record.filterId,jdbcType=BIGINT},
      field_code = #{record.fieldCode,jdbcType=VARCHAR},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
      field_value = #{record.fieldValue,jdbcType=LONGVARCHAR},
    tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update issue_filter_content
    set id = #{record.id,jdbcType=BIGINT},
      filter_id = #{record.filterId,jdbcType=BIGINT},
      field_code = #{record.fieldCode,jdbcType=VARCHAR},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
    tenantCode = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.issue.domain.IssueFilterContent">
    update issue_filter_content
    <set>
      <if test="filterId != null">
        filter_id = #{filterId,jdbcType=BIGINT},
      </if>
      <if test="fieldCode != null">
        field_code = #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        field_name = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="fieldValue != null">
        field_value = #{fieldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.issue.domain.IssueFilterContent">
    update issue_filter_content
    set filter_id = #{filterId,jdbcType=BIGINT},
      field_code = #{fieldCode,jdbcType=VARCHAR},
      field_name = #{fieldName,jdbcType=VARCHAR},
      field_value = #{fieldValue,jdbcType=LONGVARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.issue.domain.IssueFilterContent">
    update issue_filter_content
    set filter_id = #{filterId,jdbcType=BIGINT},
      field_code = #{fieldCode,jdbcType=VARCHAR},
      field_name = #{fieldName,jdbcType=VARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>