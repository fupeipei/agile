<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.issue.dao.IssueRuleMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.issue.domain.IssueRule">
    <id column="rule_id" jdbcType="BIGINT" property="ruleId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="category" jdbcType="TINYINT" property="category" />
    <result column="from_stage_id" jdbcType="BIGINT" property="fromStageId" />
    <result column="from_lane_id" jdbcType="BIGINT" property="fromLaneId" />
    <result column="to_stage_id" jdbcType="BIGINT" property="toStageId" />
    <result column="to_lane_id" jdbcType="BIGINT" property="toLaneId" />
    <result column="id_check" jdbcType="TINYINT" property="idCheck" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rule_id, project_id, tenant_code, category, from_stage_id, from_lane_id, to_stage_id, 
    to_lane_id, id_check, create_uid, create_time, update_uid, update_time
  </sql>
  <select id="selectByExample" parameterType="com.yusys.agile.issue.domain.IssueRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from issue_rule
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from issue_rule
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.issue.domain.IssueRuleExample">
    delete from issue_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.issue.domain.IssueRule" useGeneratedKeys="true" keyProperty="ruleId">
    insert into issue_rule (rule_id, project_id, tenant_code, 
      category, from_stage_id, from_lane_id, 
      to_stage_id, to_lane_id, id_check, 
      create_uid, create_time, update_uid, 
      update_time)
    values (#{ruleId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{tenantCode,jdbcType=VARCHAR}, 
      #{category,jdbcType=TINYINT}, #{fromStageId,jdbcType=BIGINT}, #{fromLaneId,jdbcType=BIGINT}, 
      #{toStageId,jdbcType=BIGINT}, #{toLaneId,jdbcType=BIGINT}, #{idCheck,jdbcType=TINYINT}, 
      #{createUid,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.issue.domain.IssueRule">
    insert into issue_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="fromStageId != null">
        from_stage_id,
      </if>
      <if test="fromLaneId != null">
        from_lane_id,
      </if>
      <if test="toStageId != null">
        to_stage_id,
      </if>
      <if test="toLaneId != null">
        to_lane_id,
      </if>
      <if test="idCheck != null">
        id_check,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ruleId != null">
        #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=TINYINT},
      </if>
      <if test="fromStageId != null">
        #{fromStageId,jdbcType=BIGINT},
      </if>
      <if test="fromLaneId != null">
        #{fromLaneId,jdbcType=BIGINT},
      </if>
      <if test="toStageId != null">
        #{toStageId,jdbcType=BIGINT},
      </if>
      <if test="toLaneId != null">
        #{toLaneId,jdbcType=BIGINT},
      </if>
      <if test="idCheck != null">
        #{idCheck,jdbcType=TINYINT},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.issue.domain.IssueRuleExample" resultType="java.lang.Long">
    select count(*) from issue_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update issue_rule
    <set>
      <if test="record.ruleId != null">
        rule_id = #{record.ruleId,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=TINYINT},
      </if>
      <if test="record.fromStageId != null">
        from_stage_id = #{record.fromStageId,jdbcType=BIGINT},
      </if>
      <if test="record.fromLaneId != null">
        from_lane_id = #{record.fromLaneId,jdbcType=BIGINT},
      </if>
      <if test="record.toStageId != null">
        to_stage_id = #{record.toStageId,jdbcType=BIGINT},
      </if>
      <if test="record.toLaneId != null">
        to_lane_id = #{record.toLaneId,jdbcType=BIGINT},
      </if>
      <if test="record.idCheck != null">
        id_check = #{record.idCheck,jdbcType=TINYINT},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update issue_rule
    set rule_id = #{record.ruleId,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=TINYINT},
      from_stage_id = #{record.fromStageId,jdbcType=BIGINT},
      from_lane_id = #{record.fromLaneId,jdbcType=BIGINT},
      to_stage_id = #{record.toStageId,jdbcType=BIGINT},
      to_lane_id = #{record.toLaneId,jdbcType=BIGINT},
      id_check = #{record.idCheck,jdbcType=TINYINT},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.issue.domain.IssueRule">
    update issue_rule
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=TINYINT},
      </if>
      <if test="fromStageId != null">
        from_stage_id = #{fromStageId,jdbcType=BIGINT},
      </if>
      <if test="fromLaneId != null">
        from_lane_id = #{fromLaneId,jdbcType=BIGINT},
      </if>
      <if test="toStageId != null">
        to_stage_id = #{toStageId,jdbcType=BIGINT},
      </if>
      <if test="toLaneId != null">
        to_lane_id = #{toLaneId,jdbcType=BIGINT},
      </if>
      <if test="idCheck != null">
        id_check = #{idCheck,jdbcType=TINYINT},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.issue.domain.IssueRule">
    update issue_rule
    set project_id = #{projectId,jdbcType=BIGINT},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      category = #{category,jdbcType=TINYINT},
      from_stage_id = #{fromStageId,jdbcType=BIGINT},
      from_lane_id = #{fromLaneId,jdbcType=BIGINT},
      to_stage_id = #{toStageId,jdbcType=BIGINT},
      to_lane_id = #{toLaneId,jdbcType=BIGINT},
      id_check = #{idCheck,jdbcType=TINYINT},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" >
    insert into issue_rule (project_id, tenant_code,
                            category, from_stage_id, from_lane_id,
                            to_stage_id, to_lane_id, id_check,
                            create_uid, create_time, update_uid,
                            update_time)
    values
    <foreach collection="rules" item="item" separator=",">
      (#{item.projectId}, #{item.tenantCode},
      #{item.category}, #{item.fromStageId}, #{item.fromLaneId},
      #{item.toStageId}, #{item.toLaneId}, #{item.idCheck},
      #{item.createUid}, #{item.createTime}, #{item.updateUid},
      #{item.updateTime})
    </foreach>
  </insert>
</mapper>