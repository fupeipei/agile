<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.issue.dao.IssueCustomRelationMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.issue.domain.IssueCustomRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="issue_type" jdbcType="TINYINT" property="issueType" />
    <result column="field_id" jdbcType="BIGINT" property="fieldId" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="required" jdbcType="VARCHAR" property="required" />
    <result column="field_type" jdbcType="TINYINT" property="fieldType" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create__uid" jdbcType="BIGINT" property="createUid" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
      <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.issue.domain.IssueCustomRelation">
    <result column="field_content" jdbcType="LONGVARCHAR" property="fieldContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, issue_type, field_id, field_name, required, field_type, project_id, create_time, 
    create__uid, update_uid, update_time, tenant_code,sort
  </sql>
  <sql id="Blob_Column_List">
    field_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.issue.domain.IssueCustomRelationExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from issue_custom_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.issue.domain.IssueCustomRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue_custom_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from issue_custom_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from issue_custom_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.issue.domain.IssueCustomRelationExample">
    delete from issue_custom_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.issue.domain.IssueCustomRelation" useGeneratedKeys="true" keyProperty="id">
    insert into issue_custom_relation (id, issue_type, field_id, 
      field_name, required, field_type, 
      project_id, create_time, create__uid, 
      update_uid, update_time, tenant_code, sort,
      field_content)
    values (#{id,jdbcType=BIGINT}, #{issueType,jdbcType=TINYINT}, #{fieldId,jdbcType=BIGINT}, 
      #{fieldName,jdbcType=VARCHAR}, #{required,jdbcType=VARCHAR}, #{fieldType,jdbcType=TINYINT}, 
      #{projectId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{createUid,jdbcType=BIGINT}, 
      #{updateUid,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{tenantCode,jdbcType=VARCHAR},#{sort,jdbcType=INTEGER},
      #{fieldContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.issue.domain.IssueCustomRelation" useGeneratedKeys="true" keyProperty="id">
    insert into issue_custom_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="issueType != null">
        issue_type,
      </if>
      <if test="fieldId != null">
        field_id,
      </if>
      <if test="fieldName != null">
        field_name,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="fieldType != null">
        field_type,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUid != null">
        create__uid,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
        <if test="sort != null">
            sort,
        </if>
      <if test="fieldContent != null">
        field_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="issueType != null">
        #{issueType,jdbcType=TINYINT},
      </if>
      <if test="fieldId != null">
        #{fieldId,jdbcType=BIGINT},
      </if>
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        #{required,jdbcType=VARCHAR},
      </if>
      <if test="fieldType != null">
        #{fieldType,jdbcType=TINYINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
        <if test="sort != null">
            #{sort,jdbcType=INTEGER},
        </if>
        <if test="fieldContent != null">
        #{fieldContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.issue.domain.IssueCustomRelationExample" resultType="java.lang.Long">
    select count(*) from issue_custom_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update issue_custom_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.issueType != null">
        issue_type = #{record.issueType,jdbcType=TINYINT},
      </if>
      <if test="record.fieldId != null">
        field_id = #{record.fieldId,jdbcType=BIGINT},
      </if>
      <if test="record.fieldName != null">
        field_name = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.required != null">
        required = #{record.required,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldType != null">
        field_type = #{record.fieldType,jdbcType=TINYINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        create__uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
        <if test="record.sort != null">
            sort = #{record.sort,jdbcType=INTEGER},
        </if>
      <if test="record.fieldContent != null">
        field_content = #{record.fieldContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update issue_custom_relation
    set id = #{record.id,jdbcType=BIGINT},
      issue_type = #{record.issueType,jdbcType=TINYINT},
      field_id = #{record.fieldId,jdbcType=BIGINT},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
      required = #{record.required,jdbcType=VARCHAR},
      field_type = #{record.fieldType,jdbcType=TINYINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create__uid = #{record.createUid,jdbcType=BIGINT},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      field_content = #{record.fieldContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update issue_custom_relation
    set id = #{record.id,jdbcType=BIGINT},
      issue_type = #{record.issueType,jdbcType=TINYINT},
      field_id = #{record.fieldId,jdbcType=BIGINT},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
      required = #{record.required,jdbcType=VARCHAR},
      field_type = #{record.fieldType,jdbcType=TINYINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create__uid = #{record.createUid,jdbcType=BIGINT},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.issue.domain.IssueCustomRelation">
    update issue_custom_relation
    <set>
      <if test="issueType != null">
        issue_type = #{issueType,jdbcType=TINYINT},
      </if>
      <if test="fieldId != null">
        field_id = #{fieldId,jdbcType=BIGINT},
      </if>
      <if test="fieldName != null">
        field_name = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=VARCHAR},
      </if>
      <if test="fieldType != null">
        field_type = #{fieldType,jdbcType=TINYINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        create__uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
        <if test="sort != null">
            sort = #{sort,jdbcType=INTEGER},
        </if>
      <if test="fieldContent != null">
        field_content = #{fieldContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.issue.domain.IssueCustomRelation">
    update issue_custom_relation
    set issue_type = #{issueType,jdbcType=TINYINT},
      field_id = #{fieldId,jdbcType=BIGINT},
      field_name = #{fieldName,jdbcType=VARCHAR},
      required = #{required,jdbcType=VARCHAR},
      field_type = #{fieldType,jdbcType=TINYINT},
      project_id = #{projectId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create__uid = #{createUid,jdbcType=BIGINT},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      field_content = #{fieldContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.issue.domain.IssueCustomRelation">
    update issue_custom_relation
    set issue_type = #{issueType,jdbcType=TINYINT},
      field_id = #{fieldId,jdbcType=BIGINT},
      field_name = #{fieldName,jdbcType=VARCHAR},
      required = #{required,jdbcType=VARCHAR},
      field_type = #{fieldType,jdbcType=TINYINT},
      project_id = #{projectId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create__uid = #{createUid,jdbcType=BIGINT},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteByProjectIdAndIssueType" >
    delete from issue_custom_relation
    where issue_type = #{issueType}
    and   project_id = #{projectId}
  </delete>
<select id="getAppliedByissueType" resultType="Long">
  select  field_id from issue_custom_relation
    where issue_type = #{issueType}
    and   project_id = #{projectId}
</select>

</mapper>