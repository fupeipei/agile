<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.set.stage.dao.KanbanTemplateMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.set.stage.domain.KanbanTemplate">
    <id column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="template_desc" jdbcType="VARCHAR" property="templateDesc" />
    <result column="template_type" jdbcType="TINYINT" property="templateType" />
    <result column="default_template" jdbcType="TINYINT" property="defaultTemplate" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    template_id, template_name, template_desc, template_type, default_template, state, 
    create_uid, create_time, update_uid, update_time, tenant_code
  </sql>
  <select id="selectByExample" parameterType="com.yusys.agile.set.stage.domain.KanbanTemplateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kanban_template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kanban_template
    where template_id = #{templateId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kanban_template
    where template_id = #{templateId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.set.stage.domain.KanbanTemplateExample">
    delete from kanban_template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.set.stage.domain.KanbanTemplate" useGeneratedKeys="true" keyProperty="templateId">
    insert into kanban_template (template_id, template_name, template_desc, 
      template_type, default_template, state, 
      create_uid, create_time, update_uid, 
      update_time, tenant_code)
    values (#{templateId,jdbcType=BIGINT}, #{templateName,jdbcType=VARCHAR}, #{templateDesc,jdbcType=VARCHAR}, 
      #{templateType,jdbcType=TINYINT}, #{defaultTemplate,jdbcType=TINYINT}, #{state,jdbcType=VARCHAR}, 
      #{createUid,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{tenantCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.set.stage.domain.KanbanTemplate" useGeneratedKeys="true" keyProperty="templateId">
    insert into kanban_template
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="templateDesc != null">
        template_desc,
      </if>
      <if test="templateType != null">
        template_type,
      </if>
      <if test="defaultTemplate != null">
        default_template,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="templateDesc != null">
        #{templateDesc,jdbcType=VARCHAR},
      </if>
      <if test="templateType != null">
        #{templateType,jdbcType=TINYINT},
      </if>
      <if test="defaultTemplate != null">
        #{defaultTemplate,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.set.stage.domain.KanbanTemplateExample" resultType="java.lang.Long">
    select count(*) from kanban_template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kanban_template
    <set>
      <if test="record.templateId != null">
        template_id = #{record.templateId,jdbcType=BIGINT},
      </if>
      <if test="record.templateName != null">
        template_name = #{record.templateName,jdbcType=VARCHAR},
      </if>
      <if test="record.templateDesc != null">
        template_desc = #{record.templateDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.templateType != null">
        template_type = #{record.templateType,jdbcType=TINYINT},
      </if>
      <if test="record.defaultTemplate != null">
        default_template = #{record.defaultTemplate,jdbcType=TINYINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kanban_template
    set template_id = #{record.templateId,jdbcType=BIGINT},
      template_name = #{record.templateName,jdbcType=VARCHAR},
      template_desc = #{record.templateDesc,jdbcType=VARCHAR},
      template_type = #{record.templateType,jdbcType=TINYINT},
      default_template = #{record.defaultTemplate,jdbcType=TINYINT},
      state = #{record.state,jdbcType=VARCHAR},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.set.stage.domain.KanbanTemplate">
    update kanban_template
    <set>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="templateDesc != null">
        template_desc = #{templateDesc,jdbcType=VARCHAR},
      </if>
      <if test="templateType != null">
        template_type = #{templateType,jdbcType=TINYINT},
      </if>
      <if test="defaultTemplate != null">
        default_template = #{defaultTemplate,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    where template_id = #{templateId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.set.stage.domain.KanbanTemplate">
    update kanban_template
    set template_name = #{templateName,jdbcType=VARCHAR},
      template_desc = #{templateDesc,jdbcType=VARCHAR},
      template_type = #{templateType,jdbcType=TINYINT},
      default_template = #{defaultTemplate,jdbcType=TINYINT},
      state = #{state,jdbcType=VARCHAR},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where template_id = #{templateId,jdbcType=BIGINT}
  </update>
</mapper>