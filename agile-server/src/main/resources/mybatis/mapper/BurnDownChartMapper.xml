<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.burndown.dao.BurnDownChartDao">
	<insert id="create">
		insert into s_burndown_chart (project_id,sprint_id,finished_workload,sprint_time,task_id,task_state,tenant_code,create_time)
		values(#{projectId},#{sprintId},#{finishedWorkload},#{sprintTime},#{taskId},#{taskState},#{tenantCode},#{createTime})
	</insert>
	
	<select id="getBySprint" resultType="com.yusys.agile.burndown.domain.BurnDownChart">
		select #{planWorkload}-ifnull(sum(finished_workload),0) remain_workload,sprint_time 
		from s_burndown_chart where sprint_id = #{sprintId} and task_state in (-1,107,108,109,110,1000,1001,1002,1004)
		group by sprint_time order by sprint_time
	</select>
	
	<update id="cancel">
		update s_burndown_chart set task_state = -1,finished_workload=0 where task_id = #{taskId}
	</update>
	
	<select id="getTasksBySprint" resultType="com.yusys.agile.burndown.dto.BurnDownTask">
		select #{planTask}-ifnull(count(*),0) remain_task,sprint_time 
		from s_burndown_chart where sprint_id = #{sprintId} and task_state in (110,1002)
		group by sprint_time order by sprint_time;
	</select>

	<update id="cancelByStorys">
		update s_burndown_chart set task_state = -1,finished_workload=0 where sprint_id = #{sprintId}
		and task_id in (
			select issue_id from issue where parent_id in
			<foreach collection="storyIds" item="storyId" separator="," open="(" close=")">
				#{storyId}
			</foreach>
		)
	</update>

	<update id="cancelByFaults">
		update
		s_burndown_chart
		set
		  task_state = -1,finished_workload = 0
		where
		  sprint_id = #{sprintId}
		and
		  task_id in 
		<foreach collection="faultIdList" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
</mapper>