<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.zentao.dao.ZtProjectstoryMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.zentao.domain.ZtProjectstory">
    <result column="project" jdbcType="INTEGER" property="project" />
    <result column="product" jdbcType="INTEGER" property="product" />
    <result column="story" jdbcType="INTEGER" property="story" />
    <result column="version" jdbcType="SMALLINT" property="version" />
    <result column="order" jdbcType="SMALLINT" property="order" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    project, product, story, version, order
  </sql>
  <select id="selectByExample" parameterType="com.yusys.agile.zentao.domain.ZtProjectstoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zt_projectstory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
     `order`by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yusys.agile.zentao.domain.ZtProjectstoryExample">
    delete from zt_projectstory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.zentao.domain.ZtProjectstory">
    insert into zt_projectstory (project, product, story, 
      version, order)
    values (#{project,jdbcType=INTEGER}, #{product,jdbcType=INTEGER}, #{story,jdbcType=INTEGER}, 
      #{version,jdbcType=SMALLINT}, #{order,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.zentao.domain.ZtProjectstory">
    insert into zt_projectstory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="project != null">
        project,
      </if>
      <if test="product != null">
        product,
      </if>
      <if test="story != null">
        story,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="order != null">
        order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="project != null">
        #{project,jdbcType=INTEGER},
      </if>
      <if test="product != null">
        #{product,jdbcType=INTEGER},
      </if>
      <if test="story != null">
        #{story,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=SMALLINT},
      </if>
      <if test="order != null">
        #{order,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.zentao.domain.ZtProjectstoryExample" resultType="java.lang.Long">
    select count(*) from zt_projectstory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zt_projectstory
    <set>
      <if test="record.project != null">
        project = #{record.project,jdbcType=INTEGER},
      </if>
      <if test="record.product != null">
        product = #{record.product,jdbcType=INTEGER},
      </if>
      <if test="record.story != null">
        story = #{record.story,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=SMALLINT},
      </if>
      <if test="record.order != null">
       `order`= #{record.order,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zt_projectstory
    set project = #{record.project,jdbcType=INTEGER},
      product = #{record.product,jdbcType=INTEGER},
      story = #{record.story,jdbcType=INTEGER},
      version = #{record.version,jdbcType=SMALLINT},
     `order`= #{record.order,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>