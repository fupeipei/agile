<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.zentao.dao.ZtStoryspecMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.zentao.domain.ZtStoryspec">
    <result column="story" jdbcType="INTEGER" property="story" />
    <result column="version" jdbcType="SMALLINT" property="version" />
    <result column="title" jdbcType="VARCHAR" property="title" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.zentao.domain.ZtStoryspecWithBLOBs">
    <result column="spec" jdbcType="LONGVARCHAR" property="spec" />
    <result column="verify" jdbcType="LONGVARCHAR" property="verify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    story, version, title
  </sql>
  <sql id="Blob_Column_List">
    spec, verify
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.zentao.domain.ZtStoryspecExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zt_storyspec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.zentao.domain.ZtStoryspecExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zt_storyspec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yusys.agile.zentao.domain.ZtStoryspecExample">
    delete from zt_storyspec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.zentao.domain.ZtStoryspecWithBLOBs">
    insert into zt_storyspec (story, version, title, 
      spec, verify)
    values (#{story,jdbcType=INTEGER}, #{version,jdbcType=SMALLINT}, #{title,jdbcType=VARCHAR}, 
      #{spec,jdbcType=LONGVARCHAR}, #{verify,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.zentao.domain.ZtStoryspecWithBLOBs">
    insert into zt_storyspec
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="story != null">
        story,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="verify != null">
        verify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="story != null">
        #{story,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=SMALLINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=LONGVARCHAR},
      </if>
      <if test="verify != null">
        #{verify,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.zentao.domain.ZtStoryspecExample" resultType="java.lang.Long">
    select count(*) from zt_storyspec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zt_storyspec
    <set>
      <if test="record.story != null">
        story = #{record.story,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=SMALLINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.spec != null">
        spec = #{record.spec,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.verify != null">
        verify = #{record.verify,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update zt_storyspec
    set story = #{record.story,jdbcType=INTEGER},
      version = #{record.version,jdbcType=SMALLINT},
      title = #{record.title,jdbcType=VARCHAR},
      spec = #{record.spec,jdbcType=LONGVARCHAR},
      verify = #{record.verify,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zt_storyspec
    set story = #{record.story,jdbcType=INTEGER},
      version = #{record.version,jdbcType=SMALLINT},
      title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>