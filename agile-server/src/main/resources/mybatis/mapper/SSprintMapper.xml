<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.sprintv3.dao.SSprintMapper">
    <resultMap id="BaseResultMap" type="com.yusys.agile.sprintv3.domain.SSprint">
        <id column="sprint_id" jdbcType="BIGINT" property="sprintId"/>
        <result column="sprint_name" jdbcType="VARCHAR" property="sprintName"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime"/>
        <result column="team_id" jdbcType="BIGINT" property="teamId"/>
        <result column="work_hours" jdbcType="INTEGER" property="workHours"/>
        <result column="version_number" jdbcType="VARCHAR" property="versionNumber"/>
        <result column="sync_state" jdbcType="TINYINT" property="syncState"/>
        <result column="create_uid" jdbcType="BIGINT" property="createUid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_uid" jdbcType="BIGINT" property="updateUid"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.sprintv3.domain.SSprintWithBLOBs">
        <result column="sprint_desc" jdbcType="LONGVARCHAR" property="sprintDesc"/>
        <result column="sprint_days" jdbcType="LONGVARCHAR" property="sprintDays"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        sprint_id,
        sprint_name,
        status,
        state,
        start_time,
        end_time,
        finish_time,
        team_id,
        work_hours,
        version_number,
        sync_state,
        create_uid,
        create_time,
        update_uid,
        update_time,
        tenant_code
    </sql>
    <sql id="Blob_Column_List">
        sprint_desc,
        sprint_days
    </sql>

    <sql id="sprintOverViewDetails">
    </sql>

    <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.sprintv3.domain.SSprintExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from s_sprint
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.yusys.agile.sprintv3.domain.SSprintExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from s_sprint
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from s_sprint
        where sprint_id = #{sprintId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from s_sprint
        where sprint_id = #{sprintId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.yusys.agile.sprintv3.domain.SSprintExample">
        delete
        from s_sprint
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yusys.agile.sprintv3.domain.SSprintWithBLOBs" keyColumn="sprint_id"
            keyProperty="sprintId" useGeneratedKeys="true">
        insert into s_sprint (sprint_name, status,
                              state, start_time, end_time,
                              finish_time, team_id, work_hours,
                              version_number, sync_state, create_uid,
                              create_time, update_uid, update_time,
                              tenant_code, sprint_desc, sprint_days)
        values (#{sprintName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
                #{state,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
                #{finishTime,jdbcType=TIMESTAMP}, #{teamId,jdbcType=BIGINT}, #{workHours,jdbcType=INTEGER},
                #{versionNumber,jdbcType=VARCHAR}, #{syncState,jdbcType=TINYINT}, #{createUid,jdbcType=BIGINT},
                #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
                #{tenantCode,jdbcType=VARCHAR}, #{sprintDesc,jdbcType=LONGVARCHAR}, #{sprintDays,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.yusys.agile.sprintv3.domain.SSprintWithBLOBs" keyColumn="sprint_id"
            keyProperty="sprintId">
        insert into s_sprint
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sprintId != null">
                sprint_id,
            </if>
            <if test="sprintName != null">
                sprint_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="finishTime != null">
                finish_time,
            </if>
            <if test="teamId != null">
                team_id,
            </if>
            <if test="workHours != null">
                work_hours,
            </if>
            <if test="versionNumber != null">
                version_number,
            </if>
            <if test="syncState != null">
                sync_state,
            </if>
            <if test="createUid != null">
                create_uid,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUid != null">
                update_uid,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="tenantCode != null">
                tenant_code,
            </if>
            <if test="sprintDesc != null">
                sprint_desc,
            </if>
            <if test="sprintDays != null">
                sprint_days,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sprintId != null">
                #{sprintId,jdbcType=BIGINT},
            </if>
            <if test="sprintName != null">
                #{sprintName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishTime != null">
                #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="teamId != null">
                #{teamId,jdbcType=BIGINT},
            </if>
            <if test="workHours != null">
                #{workHours,jdbcType=INTEGER},
            </if>
            <if test="versionNumber != null">
                #{versionNumber,jdbcType=VARCHAR},
            </if>
            <if test="syncState != null">
                #{syncState,jdbcType=TINYINT},
            </if>
            <if test="createUid != null">
                #{createUid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUid != null">
                #{updateUid,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tenantCode != null">
                #{tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="sprintDesc != null">
                #{sprintDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="sprintDays != null">
                #{sprintDays,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yusys.agile.sprintv3.domain.SSprintExample"
            resultType="java.lang.Long">
        select count(*)
        from s_sprint
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update s_sprint
        <set>
            <if test="record.sprintId != null">
                sprint_id = #{record.sprintId,jdbcType=BIGINT},
            </if>
            <if test="record.sprintName != null">
                sprint_name = #{record.sprintName,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.finishTime != null">
                finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.teamId != null">
                team_id = #{record.teamId,jdbcType=BIGINT},
            </if>
            <if test="record.workHours != null">
                work_hours = #{record.workHours,jdbcType=INTEGER},
            </if>
            <if test="record.versionNumber != null">
                version_number = #{record.versionNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.syncState != null">
                sync_state = #{record.syncState,jdbcType=TINYINT},
            </if>
            <if test="record.createUid != null">
                create_uid = #{record.createUid,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateUid != null">
                update_uid = #{record.updateUid,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.tenantCode != null">
                tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="record.sprintDesc != null">
                sprint_desc = #{record.sprintDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.sprintDays != null">
                sprint_days = #{record.sprintDays,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update s_sprint
        set sprint_id      = #{record.sprintId,jdbcType=BIGINT},
            sprint_name    = #{record.sprintName,jdbcType=VARCHAR},
            status         = #{record.status,jdbcType=TINYINT},
            state          = #{record.state,jdbcType=VARCHAR},
            start_time     = #{record.startTime,jdbcType=TIMESTAMP},
            end_time       = #{record.endTime,jdbcType=TIMESTAMP},
            finish_time    = #{record.finishTime,jdbcType=TIMESTAMP},
            team_id        = #{record.teamId,jdbcType=BIGINT},
            work_hours     = #{record.workHours,jdbcType=INTEGER},
            version_number = #{record.versionNumber,jdbcType=VARCHAR},
            sync_state     = #{record.syncState,jdbcType=TINYINT},
            create_uid     = #{record.createUid,jdbcType=BIGINT},
            create_time    = #{record.createTime,jdbcType=TIMESTAMP},
            update_uid     = #{record.updateUid,jdbcType=BIGINT},
            update_time    = #{record.updateTime,jdbcType=TIMESTAMP},
            tenant_code    = #{record.tenantCode,jdbcType=VARCHAR},
            sprint_desc    = #{record.sprintDesc,jdbcType=LONGVARCHAR},
            sprint_days    = #{record.sprintDays,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update s_sprint
        set sprint_id      = #{record.sprintId,jdbcType=BIGINT},
            sprint_name    = #{record.sprintName,jdbcType=VARCHAR},
            status         = #{record.status,jdbcType=TINYINT},
            state          = #{record.state,jdbcType=VARCHAR},
            start_time     = #{record.startTime,jdbcType=TIMESTAMP},
            end_time       = #{record.endTime,jdbcType=TIMESTAMP},
            finish_time    = #{record.finishTime,jdbcType=TIMESTAMP},
            team_id        = #{record.teamId,jdbcType=BIGINT},
            work_hours     = #{record.workHours,jdbcType=INTEGER},
            version_number = #{record.versionNumber,jdbcType=VARCHAR},
            sync_state     = #{record.syncState,jdbcType=TINYINT},
            create_uid     = #{record.createUid,jdbcType=BIGINT},
            create_time    = #{record.createTime,jdbcType=TIMESTAMP},
            update_uid     = #{record.updateUid,jdbcType=BIGINT},
            update_time    = #{record.updateTime,jdbcType=TIMESTAMP},
            tenant_code    = #{record.tenantCode,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.sprintv3.domain.SSprintWithBLOBs">
        update s_sprint
        <set>
            <if test="sprintName != null">
                sprint_name = #{sprintName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishTime != null">
                finish_time = #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="teamId != null">
                team_id = #{teamId,jdbcType=BIGINT},
            </if>
            <if test="workHours != null">
                work_hours = #{workHours,jdbcType=INTEGER},
            </if>
            <if test="versionNumber != null">
                version_number = #{versionNumber,jdbcType=VARCHAR},
            </if>
            <if test="syncState != null">
                sync_state = #{syncState,jdbcType=TINYINT},
            </if>
            <if test="createUid != null">
                create_uid = #{createUid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUid != null">
                update_uid = #{updateUid,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tenantCode != null">
                tenant_code = #{tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="sprintDesc != null">
                sprint_desc = #{sprintDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="sprintDays != null">
                sprint_days = #{sprintDays,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where sprint_id = #{sprintId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.sprintv3.domain.SSprintWithBLOBs">
        update s_sprint
        set sprint_name    = #{sprintName,jdbcType=VARCHAR},
            status         = #{status,jdbcType=TINYINT},
            state          = #{state,jdbcType=VARCHAR},
            start_time     = #{startTime,jdbcType=TIMESTAMP},
            end_time       = #{endTime,jdbcType=TIMESTAMP},
            finish_time    = #{finishTime,jdbcType=TIMESTAMP},
            team_id        = #{teamId,jdbcType=BIGINT},
            work_hours     = #{workHours,jdbcType=INTEGER},
            version_number = #{versionNumber,jdbcType=VARCHAR},
            sync_state     = #{syncState,jdbcType=TINYINT},
            create_uid     = #{createUid,jdbcType=BIGINT},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_uid     = #{updateUid,jdbcType=BIGINT},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            tenant_code    = #{tenantCode,jdbcType=VARCHAR},
            sprint_desc    = #{sprintDesc,jdbcType=LONGVARCHAR},
            sprint_days    = #{sprintDays,jdbcType=LONGVARCHAR}
        where sprint_id = #{sprintId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yusys.agile.sprintv3.domain.SSprint">
        update s_sprint
        set sprint_name    = #{sprintName,jdbcType=VARCHAR},
            status         = #{status,jdbcType=TINYINT},
            state          = #{state,jdbcType=VARCHAR},
            start_time     = #{startTime,jdbcType=TIMESTAMP},
            end_time       = #{endTime,jdbcType=TIMESTAMP},
            finish_time    = #{finishTime,jdbcType=TIMESTAMP},
            team_id        = #{teamId,jdbcType=BIGINT},
            work_hours     = #{workHours,jdbcType=INTEGER},
            version_number = #{versionNumber,jdbcType=VARCHAR},
            sync_state     = #{syncState,jdbcType=TINYINT},
            create_uid     = #{createUid,jdbcType=BIGINT},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_uid     = #{updateUid,jdbcType=BIGINT},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            tenant_code    = #{tenantCode,jdbcType=VARCHAR}
        where sprint_id = #{sprintId,jdbcType=BIGINT}
    </update>

    <select id="CheckSprintName" resultType="int">
        select count(sprint_id)
        from s_sprint
        where sprint_name = #{sprintName}
          and tenant_code = #{tenantCode}
    </select>

    <update id="arrangeTeam">
        UPDATE sprint
        SET team_id = #{teamId}
        WHERE sprint_id = #{sprintId}
    </update>
    <select id="getUnStartIds" resultType="java.lang.Long">
        select sprint_id
        from s_sprint
        where start_time <![CDATA[<=]]> #{now}
          AND status = 2
          and state = "U"
    </select>
    <update id="changeStatusTOProgressByIds">
        UPDATE s_sprint
        SET status=3 WHERE sprint_id IN(
        <foreach collection="sprintIds" separator="," item="sprintId">
            #{sprintId}
        </foreach>
        )
    </update>

    <sql id="query_list_column">
        sp.sprint_id as sprint_id,
        sp.sprint_name as sprint_name,
        sp.status as status,
        sp.start_time as start_time,
        sp.end_time as end_time,
        sp.finish_time as finish_time,
        sp.sprint_days as sprint_days,
        sp.team_id as team_id,
        sp.work_hours as work_hours,
        sp.version_number as version_number,
        sp.sync_state as sync_state,
        sp.create_uid as create_uid,
        sp.create_time as create_time,
        sp.tenant_code as tenant_code
    </sql>
    <sql id="query_list_param">
        sp.team_id = st.team_id
        and sp.state = 'U'
        <if test="params != null">
            <if test="params.team != null and params.team != ''">
                and (st.team_id like concat('%',#{params.team},'%')
                    or st.team_name like concat('%',#{params.team},'%')
                )
            </if>
            <if test="params.sprint != null and params.sprint != ''">
                and (sp.sprint_id like concat('%',#{params.sprint},'%')
                    or sp.sprint_name like concat('%',#{params.sprint},'%')
                )
            </if>
        </if>
    </sql>
    <sql id="query_other_list_param">
        and sp.team_id = st.team_id
        and st.team_id = stm.team_id
        and st.team_id = sts.team_id
        and sp.state = 'U'
        <if test="params != null">
            <if test="params.team != null and params.team != ''">
                and (st.team_id like concat('%',#{params.team},'%')
                    or st.team_name like concat('%',#{params.team},'%')
                )
            </if>
            <if test="params.sprint != null and params.sprint != ''">
                and (sp.sprint_id like concat('%',#{params.sprint},'%')
                    or sp.sprint_name like concat('%',#{params.sprint},'%')
                )
            </if>
            <if test="params.system != null">
                and sts.system_id = #{params.system}
            </if>
            <if test="params.user != null">
                and stm.user_id = #{params.user}
            </if>
        </if>
    </sql>
    <select id="queryAllSprint" resultType="com.yusys.agile.sprintV3.dto.SprintListDTO">
        select
        <include refid="query_list_column"/>
        from s_sprint sp, s_team st
        <where>
            <include refid="query_list_param"/>
        </where>
        order by sp.create_time desc
    </select>
    <select id="queryOtherSprint" resultType="com.yusys.agile.sprintV3.dto.SprintListDTO">
        select
        <include refid="query_list_column"/>
        from s_sprint sp, s_team st, s_team_member stm, s_team_system sts
        <where>
            <include refid="query_other_list_param"/>
            <if test="params.user != null">
                and sp.create_uid = #{params.user}
            </if>
        </where>
        order by sp.create_time desc
    </select>

    <update id="cancelSprint">
        update s_sprint
        set status = 0
        where sprint_id = #{sprintId}
    </update>

    <select id="sprintExist" resultType="int">
        select count(sprint_id)
        from s_sprint
        where sprint_id = #{sprintId}
    </select>

    <select id="joinSprint" resultType="int">
        select count(a.sprint_id)
        from s_sprint a
                     left join s_sprint_user_hour b on a.sprint_id = b.sprint_id
                     left join s_team_po c on b.user_id = c.user_id
        where a.sprint_id = #{sprintId}
          and c.user_id = #{userId}
    </select>

    <select id="creatUser" resultType="boolean">
        <![CDATA[
        select count(sprint_id)
        from s_sprint
        where sprint_id = #{sprintId}
          and create_uid = #{userId}
        ]]>
    </select>

    <select id="sprintUnfinishedStory" resultType="int">
        select count(issue_id)
        from s_issue
        where sprint_id = #{sprintId}
          and issue_type = 3
          and stage_id <![CDATA[<]]> 103
    </select>

    <update id="sprintFinish">
        update s_sprint
        set status = 4
        where sprint_id = #{sprintId}
    </update>

    <select id="querySprintStatus" resultType="java.lang.Byte">
        select status
        from s_sprint
        where sprint_id = #{sprintId}
    </select>

    <select id="checkSprintPo" resultType="boolean">
        <![CDATA[
        select count(sprint_id)
        from s_sprint a
                     left join s_team_member b on a.team_id = b.team_id
        where a.sprint_id = #{sprintId}
          and b.user_id = #{userId}
          and b.role_id = 104
        ]]>
    </select>

    <select id="selectByPrimaryKeyNotText" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        from sprint
        where sprint_id = #{sprintId,jdbcType=BIGINT}
    </select>
    <select id="queryValidSprintById" resultMap="ResultMapWithBLOBs">
        select status, sprint_name, sprint_id,work_hours, start_time, end_time,team_id
        from s_sprint
        where sprint_id = #{sprintId}
          and state = 'U'
    </select>
</mapper>