<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.sprintv3.dao.SSprintReviewMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.sprintv3.domain.SSprintReview">
    <id column="review_id" jdbcType="BIGINT" property="reviewId" />
    <result column="review_desc" jdbcType="VARCHAR" property="reviewDesc" />
    <result column="review_type" jdbcType="BIGINT" property="reviewType" />
    <result column="sprint_id" jdbcType="BIGINT" property="sprintId" />
    <result column="propose_uid" jdbcType="BIGINT" property="proposeUid" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    review_id, review_desc, review_type, sprint_id, propose_uid, create_uid, create_time, 
    update_uid, update_time, tenant_code
  </sql>
  <select id="selectByExample" parameterType="com.yusys.agile.sprintv3.domain.SSprintReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_sprint_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_sprint_review
    where review_id = #{reviewId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_sprint_review
    where review_id = #{reviewId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.sprintv3.domain.SSprintReviewExample">
    delete from s_sprint_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.sprintv3.domain.SSprintReview" useGeneratedKeys="true" keyProperty="reviewId">
    insert into s_sprint_review (review_id, review_desc, review_type, 
      sprint_id, propose_uid, create_uid, 
      create_time, update_uid, update_time, 
      tenant_code)
    values (#{reviewId,jdbcType=BIGINT}, #{reviewDesc,jdbcType=VARCHAR}, #{reviewType,jdbcType=BIGINT}, 
      #{sprintId,jdbcType=BIGINT}, #{proposeUid,jdbcType=BIGINT}, #{createUid,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{tenantCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.sprintv3.domain.SSprintReview" useGeneratedKeys="true" keyProperty="reviewId">
    insert into s_sprint_review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        review_id,
      </if>
      <if test="reviewDesc != null">
        review_desc,
      </if>
      <if test="reviewType != null">
        review_type,
      </if>
      <if test="sprintId != null">
        sprint_id,
      </if>
      <if test="proposeUid != null">
        propose_uid,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        #{reviewId,jdbcType=BIGINT},
      </if>
      <if test="reviewDesc != null">
        #{reviewDesc,jdbcType=VARCHAR},
      </if>
      <if test="reviewType != null">
        #{reviewType,jdbcType=BIGINT},
      </if>
      <if test="sprintId != null">
        #{sprintId,jdbcType=BIGINT},
      </if>
      <if test="proposeUid != null">
        #{proposeUid,jdbcType=BIGINT},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.sprintv3.domain.SSprintReviewExample" resultType="java.lang.Long">
    select count(*) from s_sprint_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_sprint_review
    <set>
      <if test="record.reviewId != null">
        review_id = #{record.reviewId,jdbcType=BIGINT},
      </if>
      <if test="record.reviewDesc != null">
        review_desc = #{record.reviewDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewType != null">
        review_type = #{record.reviewType,jdbcType=BIGINT},
      </if>
      <if test="record.sprintId != null">
        sprint_id = #{record.sprintId,jdbcType=BIGINT},
      </if>
      <if test="record.proposeUid != null">
        propose_uid = #{record.proposeUid,jdbcType=BIGINT},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_sprint_review
    set review_id = #{record.reviewId,jdbcType=BIGINT},
      review_desc = #{record.reviewDesc,jdbcType=VARCHAR},
      review_type = #{record.reviewType,jdbcType=BIGINT},
      sprint_id = #{record.sprintId,jdbcType=BIGINT},
      propose_uid = #{record.proposeUid,jdbcType=BIGINT},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.sprintv3.domain.SSprintReview">
    update s_sprint_review
    <set>
      <if test="reviewDesc != null">
        review_desc = #{reviewDesc,jdbcType=VARCHAR},
      </if>
      <if test="reviewType != null">
        review_type = #{reviewType,jdbcType=BIGINT},
      </if>
      <if test="sprintId != null">
        sprint_id = #{sprintId,jdbcType=BIGINT},
      </if>
      <if test="proposeUid != null">
        propose_uid = #{proposeUid,jdbcType=BIGINT},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.sprintv3.domain.SSprintReview">
    update s_sprint_review
    set review_desc = #{reviewDesc,jdbcType=VARCHAR},
      review_type = #{reviewType,jdbcType=BIGINT},
      sprint_id = #{sprintId,jdbcType=BIGINT},
      propose_uid = #{proposeUid,jdbcType=BIGINT},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where review_id = #{reviewId,jdbcType=BIGINT}
  </update>
</mapper>