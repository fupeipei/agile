<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.teamv3.dao.STeamUserMapper">
    <resultMap id="BaseResultMap" type="com.yusys.agile.teamv3.domain.STeamUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="team_id" jdbcType="BIGINT" property="teamId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_account" jdbcType="VARCHAR" property="userAccount"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_role" jdbcType="TINYINT" property="userRole"/>
        <result column="create_uid" jdbcType="BIGINT" property="createUid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_uid" jdbcType="INTEGER" property="updateUid"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id,
        team_id,
        user_id,
        user_account,
        user_name,
        user_role,
        create_uid,
        create_time,
        update_uid,
        update_time,
        tenant_code
    </sql>
    <select id="selectByExample" parameterType="com.yusys.agile.teamv3.domain.STeamUserExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from s_team_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_team_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from s_team_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.yusys.agile.teamv3.domain.STeamUserExample">
        delete
        from s_team_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yusys.agile.teamv3.domain.STeamUser">
        insert into s_team_user (id, team_id, user_id,
                                 user_account, user_name, user_role,
                                 create_uid, create_time, update_uid,
                                 update_time, tenant_code)
        values (#{id,jdbcType=BIGINT}, #{teamId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
                #{userAccount,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userRole,jdbcType=TINYINT},
                #{createUid,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=INTEGER},
                #{updateTime,jdbcType=TIMESTAMP}, #{tenantCode,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.yusys.agile.teamv3.domain.STeamUser">
        insert into s_team_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="teamId != null">
                team_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userAccount != null">
                user_account,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userRole != null">
                user_role,
            </if>
            <if test="createUid != null">
                create_uid,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUid != null">
                update_uid,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="tenantCode != null">
                tenant_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="teamId != null">
                #{teamId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userAccount != null">
                #{userAccount,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userRole != null">
                #{userRole,jdbcType=TINYINT},
            </if>
            <if test="createUid != null">
                #{createUid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUid != null">
                #{updateUid,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tenantCode != null">
                #{tenantCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yusys.agile.teamv3.domain.STeamUserExample"
            resultType="java.lang.Long">
        select count(*)
        from s_team_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update s_team_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.teamId != null">
                team_id = #{record.teamId,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.userAccount != null">
                user_account = #{record.userAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userRole != null">
                user_role = #{record.userRole,jdbcType=TINYINT},
            </if>
            <if test="record.createUid != null">
                create_uid = #{record.createUid,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateUid != null">
                update_uid = #{record.updateUid,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.tenantCode != null">
                tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update s_team_user
        set id           = #{record.id,jdbcType=BIGINT},
            team_id      = #{record.teamId,jdbcType=BIGINT},
            user_id      = #{record.userId,jdbcType=BIGINT},
            user_account = #{record.userAccount,jdbcType=VARCHAR},
            user_name    = #{record.userName,jdbcType=VARCHAR},
            user_role    = #{record.userRole,jdbcType=TINYINT},
            create_uid   = #{record.createUid,jdbcType=BIGINT},
            create_time  = #{record.createTime,jdbcType=TIMESTAMP},
            update_uid   = #{record.updateUid,jdbcType=INTEGER},
            update_time  = #{record.updateTime,jdbcType=TIMESTAMP},
            tenant_code  = #{record.tenantCode,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.teamv3.domain.STeamUser">
        update s_team_user
        <set>
            <if test="teamId != null">
                team_id = #{teamId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="userAccount != null">
                user_account = #{userAccount,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userRole != null">
                user_role = #{userRole,jdbcType=TINYINT},
            </if>
            <if test="createUid != null">
                create_uid = #{createUid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUid != null">
                update_uid = #{updateUid,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tenantCode != null">
                tenant_code = #{tenantCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yusys.agile.teamv3.domain.STeamUser">
        update s_team_user
        set team_id      = #{teamId,jdbcType=BIGINT},
            user_id      = #{userId,jdbcType=BIGINT},
            user_account = #{userAccount,jdbcType=VARCHAR},
            user_name    = #{userName,jdbcType=VARCHAR},
            user_role    = #{userRole,jdbcType=TINYINT},
            create_uid   = #{createUid,jdbcType=BIGINT},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_uid   = #{updateUid,jdbcType=INTEGER},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            tenant_code  = #{tenantCode,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByTeamIds" resultType="com.yusys.agile.team.dto.TeamUserDTO">
        select id,
               team_id,
               user_id,
               user_account,
               user_name
        from s_team_user
                where
        <choose>
            <when test="teamIds != null and teamIds.size > 0">
                team_id in
                <foreach collection="teamIds" item="teamId" open="(" separator="," close=")">
                    #{teamId}
                </foreach>
            </when>
            <otherwise>
                1=0
            </otherwise>
        </choose>
    </select>

    <insert id="bindingTeamAndUser">
        insert into s_team_user(team_id, user_id, user_account, user_name, create_uid, create_time,
                                update_uid, update_time, tenant_code)
                values
        <foreach collection="users" item="item" separator=",">
            (#{teamId}, #{item.userId}, #{item.userAccount}, #{item.userName}, create_uid, create_time, update_uid,
             update_time, tenant_code)
        </foreach>
    </insert>
    <!--用户角色，1：po，2：sm，3：普通成员-->
    <update id="appointSmOrPo">
        <!--@mbg.generated-->
        update s_team_user
        set user_role =#{role}
                where team_id = #{teamId}
                  and user_id in  (
        <foreach collection="teamPoS" item="item" separator=",">
            #{item.value}
        </foreach>
        )
    </update>

    <delete id="removeBindingTeamAndUser">
        delete
        from s_team_user a
        where a.team_id = #{teamId}
    </delete>

    <select id="queryUserByRole" resultType="com.yusys.portal.model.facade.entity.SsoUser">
        select user_id, user_account, user_name
        from s_team_user
        where team_id = #{ teamId}
          and user_role = #{role}
    </select>
</mapper>