<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.issue.dao.IssueAcceptanceMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.issue.domain.IssueAcceptance">
    <id column="acceptance_id" jdbcType="BIGINT" property="acceptanceId" />
    <result column="issue_id" jdbcType="BIGINT" property="issueId" />
    <result column="standard" jdbcType="VARCHAR" property="standard" />
    <result column="is_select" jdbcType="TINYINT" property="isSelect" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="accepter" jdbcType="BIGINT" property="accepter" />
    <result column="accept_time" jdbcType="TIMESTAMP" property="acceptTime" />
    <result column="is_pass" jdbcType="TINYINT" property="isPass" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.issue.domain.IssueAcceptance">
    <result column="remarks" jdbcType="LONGVARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    acceptance_id, issue_id, standard, is_select, state, create_uid, create_time, update_uid, 
    update_time, accepter, accept_time, is_pass,tenant_code
  </sql>
  <sql id="Blob_Column_List">
    remarks
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.issue.domain.IssueAcceptanceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_issue_acceptance 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.issue.domain.IssueAcceptanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_issue_acceptance 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_issue_acceptance 
    where acceptance_id = #{acceptanceId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_issue_acceptance 
    where acceptance_id = #{acceptanceId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.issue.domain.IssueAcceptanceExample">
    delete from s_issue_acceptance 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.issue.domain.IssueAcceptance" useGeneratedKeys="true" keyProperty="acceptanceId">
    insert into s_issue_acceptance  (acceptance_id, issue_id, standard, 
      is_select, state, create_uid, 
      create_time, update_uid, update_time, 
      accepter, accept_time, is_pass, 
      remarks,tenant_code)
    values (#{acceptanceId,jdbcType=BIGINT}, #{issueId,jdbcType=BIGINT}, #{standard,jdbcType=VARCHAR}, 
      #{isSelect,jdbcType=TINYINT}, #{state,jdbcType=VARCHAR}, #{createUid,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{accepter,jdbcType=BIGINT}, #{acceptTime,jdbcType=TIMESTAMP}, #{isPass,jdbcType=TINYINT}, 
      #{remarks,jdbcType=LONGVARCHAR},#{tenantCode})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.issue.domain.IssueAcceptance" useGeneratedKeys="true" keyProperty="acceptanceId">
    insert into s_issue_acceptance 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="acceptanceId != null">
        acceptance_id,
      </if>
      <if test="issueId != null">
        issue_id,
      </if>
      <if test="standard != null">
        standard,
      </if>
      <if test="isSelect != null">
        is_select,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="accepter != null">
        accepter,
      </if>
      <if test="acceptTime != null">
        accept_time,
      </if>
      <if test="isPass != null">
        is_pass,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="acceptanceId != null">
        #{acceptanceId,jdbcType=BIGINT},
      </if>
      <if test="issueId != null">
        #{issueId,jdbcType=BIGINT},
      </if>
      <if test="standard != null">
        #{standard,jdbcType=VARCHAR},
      </if>
      <if test="isSelect != null">
        #{isSelect,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accepter != null">
        #{accepter,jdbcType=BIGINT},
      </if>
      <if test="acceptTime != null">
        #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPass != null">
        #{isPass,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.issue.domain.IssueAcceptanceExample" resultType="java.lang.Long">
    select count(*) from s_issue_acceptance 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_issue_acceptance 
    <set>
      <if test="record.acceptanceId != null">
        acceptance_id = #{record.acceptanceId,jdbcType=BIGINT},
      </if>
      <if test="record.issueId != null">
        issue_id = #{record.issueId,jdbcType=BIGINT},
      </if>
      <if test="record.standard != null">
        standard = #{record.standard,jdbcType=VARCHAR},
      </if>
      <if test="record.isSelect != null">
        is_select = #{record.isSelect,jdbcType=TINYINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accepter != null">
        accepter = #{record.accepter,jdbcType=BIGINT},
      </if>
      <if test="record.acceptTime != null">
        accept_time = #{record.acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPass != null">
        is_pass = #{record.isPass,jdbcType=TINYINT},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update s_issue_acceptance 
    set acceptance_id = #{record.acceptanceId,jdbcType=BIGINT},
      issue_id = #{record.issueId,jdbcType=BIGINT},
      standard = #{record.standard,jdbcType=VARCHAR},
      is_select = #{record.isSelect,jdbcType=TINYINT},
      state = #{record.state,jdbcType=VARCHAR},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      accepter = #{record.accepter,jdbcType=BIGINT},
      accept_time = #{record.acceptTime,jdbcType=TIMESTAMP},
      is_pass = #{record.isPass,jdbcType=TINYINT},
      remarks = #{record.remarks,jdbcType=LONGVARCHAR},
    tenant_code = #{record.tenantCode,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_issue_acceptance 
    set acceptance_id = #{record.acceptanceId,jdbcType=BIGINT},
      issue_id = #{record.issueId,jdbcType=BIGINT},
      standard = #{record.standard,jdbcType=VARCHAR},
      is_select = #{record.isSelect,jdbcType=TINYINT},
      state = #{record.state,jdbcType=VARCHAR},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      accepter = #{record.accepter,jdbcType=BIGINT},
      accept_time = #{record.acceptTime,jdbcType=TIMESTAMP},
      is_pass = #{record.isPass,jdbcType=TINYINT},
    tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.issue.domain.IssueAcceptance">
    update s_issue_acceptance 
    <set>
      <if test="issueId != null">
        issue_id = #{issueId,jdbcType=BIGINT},
      </if>
      <if test="standard != null">
        standard = #{standard,jdbcType=VARCHAR},
      </if>
      <if test="isSelect != null">
        is_select = #{isSelect,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accepter != null">
        accepter = #{accepter,jdbcType=BIGINT},
      </if>
      <if test="acceptTime != null">
        accept_time = #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPass != null">
        is_pass = #{isPass,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where acceptance_id = #{acceptanceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.issue.domain.IssueAcceptance">
    update s_issue_acceptance 
    set issue_id = #{issueId,jdbcType=BIGINT},
      standard = #{standard,jdbcType=VARCHAR},
      is_select = #{isSelect,jdbcType=TINYINT},
      state = #{state,jdbcType=VARCHAR},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      accepter = #{accepter,jdbcType=BIGINT},
      accept_time = #{acceptTime,jdbcType=TIMESTAMP},
      is_pass = #{isPass,jdbcType=TINYINT},
      remarks = #{remarks,jdbcType=LONGVARCHAR},
       tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where acceptance_id = #{acceptanceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.issue.domain.IssueAcceptance">
    update s_issue_acceptance 
    set issue_id = #{issueId,jdbcType=BIGINT},
      standard = #{standard,jdbcType=VARCHAR},
      is_select = #{isSelect,jdbcType=TINYINT},
      state = #{state,jdbcType=VARCHAR},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      accepter = #{accepter,jdbcType=BIGINT},
      accept_time = #{acceptTime,jdbcType=TIMESTAMP},
      is_pass = #{isPass,jdbcType=TINYINT},
       tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where acceptance_id = #{acceptanceId,jdbcType=BIGINT}
  </update>
</mapper>