<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.scheduleplan.dao.SScheduleMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.scheduleplan.domain.SSchedule">
    <id column="schedule_id" jdbcType="BIGINT" property="scheduleId" />
    <result column="epic_id" jdbcType="BIGINT" property="epicId" />
    <result column="schedule_name" jdbcType="VARCHAR" property="scheduleName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate" />
    <result column="raise_test_date" jdbcType="TIMESTAMP" property="raiseTestDate" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    schedule_id, epic_id, schedule_name, create_time, create_uid, release_date, raise_test_date, 
    state, tenant_code
  </sql>
  <select id="selectByExample" parameterType="com.yusys.agile.scheduleplan.domain.SScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_schedule
    where schedule_id = #{scheduleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_schedule
    where schedule_id = #{scheduleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.scheduleplan.domain.SScheduleExample">
    delete from s_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.scheduleplan.domain.SSchedule">
    insert into s_schedule (schedule_id, epic_id, schedule_name, 
      create_time, create_uid, release_date, 
      raise_test_date, state, tenant_code
      )
    values (#{scheduleId,jdbcType=BIGINT}, #{epicId,jdbcType=BIGINT}, #{scheduleName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUid,jdbcType=BIGINT}, #{releaseDate,jdbcType=TIMESTAMP}, 
      #{raiseTestDate,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.scheduleplan.domain.SSchedule">
    insert into s_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="epicId != null">
        epic_id,
      </if>
      <if test="scheduleName != null">
        schedule_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="raiseTestDate != null">
        raise_test_date,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=BIGINT},
      </if>
      <if test="epicId != null">
        #{epicId,jdbcType=BIGINT},
      </if>
      <if test="scheduleName != null">
        #{scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="raiseTestDate != null">
        #{raiseTestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.scheduleplan.domain.SScheduleExample" resultType="java.lang.Long">
    select count(*) from s_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_schedule
    <set>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=BIGINT},
      </if>
      <if test="record.epicId != null">
        epic_id = #{record.epicId,jdbcType=BIGINT},
      </if>
      <if test="record.scheduleName != null">
        schedule_name = #{record.scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.raiseTestDate != null">
        raise_test_date = #{record.raiseTestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_schedule
    set schedule_id = #{record.scheduleId,jdbcType=BIGINT},
      epic_id = #{record.epicId,jdbcType=BIGINT},
      schedule_name = #{record.scheduleName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      raise_test_date = #{record.raiseTestDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.scheduleplan.domain.SSchedule">
    update s_schedule
    <set>
      <if test="epicId != null">
        epic_id = #{epicId,jdbcType=BIGINT},
      </if>
      <if test="scheduleName != null">
        schedule_name = #{scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="raiseTestDate != null">
        raise_test_date = #{raiseTestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    where schedule_id = #{scheduleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.scheduleplan.domain.SSchedule">
    update s_schedule
    set epic_id = #{epicId,jdbcType=BIGINT},
      schedule_name = #{scheduleName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_uid = #{createUid,jdbcType=BIGINT},
      release_date = #{releaseDate,jdbcType=TIMESTAMP},
      raise_test_date = #{raiseTestDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where schedule_id = #{scheduleId,jdbcType=BIGINT}
  </update>
</mapper>