<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.versionmanagerv3.dao.SVersionManagerMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.versionmanagerv3.domain.SVersionManager">
    <id column="version_manager_id" jdbcType="BIGINT" property="versionManagerId" />
    <result column="version_name" jdbcType="VARCHAR" property="versionName" />
    <result column="raise_test_date" jdbcType="DATE" property="raiseTestDate" />
    <result column="release_date" jdbcType="DATE" property="releaseDate" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="system_id" jdbcType="BIGINT" property="systemId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.versionmanagerv3.domain.SVersionManager">
    <result column="version_describe" jdbcType="LONGVARCHAR" property="versionDescribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    version_manager_id, version_name, raise_test_date, release_date, create_uid, create_name, 
    create_time, update_uid, update_time, tenant_code, state, system_id
  </sql>
  <sql id="Blob_Column_List">
    version_describe
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManagerExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_version_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManagerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_version_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_version_manager
    where version_manager_id = #{versionManagerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_version_manager
    where version_manager_id = #{versionManagerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManagerExample">
    delete from s_version_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManager">
    insert into s_version_manager (version_manager_id, version_name, raise_test_date, 
      release_date, create_uid, create_name, 
      create_time, update_uid, update_time, 
      tenant_code, state, system_id, 
      version_describe)
    values (#{versionManagerId,jdbcType=BIGINT}, #{versionName,jdbcType=VARCHAR}, #{raiseTestDate,jdbcType=DATE}, 
      #{releaseDate,jdbcType=DATE}, #{createUid,jdbcType=BIGINT}, #{createName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{tenantCode,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{systemId,jdbcType=BIGINT}, 
      #{versionDescribe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManager" useGeneratedKeys="true" keyProperty="versionManagerId">
    insert into s_version_manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <!--<if test="versionManagerId != null">-->
        <!--version_manager_id,-->
      <!--</if>-->
      <if test="versionName != null">
        version_name,
      </if>
      <if test="raiseTestDate != null">
        raise_test_date,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="systemId != null">
        system_id,
      </if>
      <if test="versionDescribe != null">
        version_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <!--<if test="versionManagerId != null">-->
        <!--#{versionManagerId,jdbcType=BIGINT},-->
      <!--</if>-->
      <if test="versionName != null">
        #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="raiseTestDate != null">
        #{raiseTestDate,jdbcType=DATE},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=DATE},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=BIGINT},
      </if>
      <if test="versionDescribe != null">
        #{versionDescribe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManagerExample" resultType="java.lang.Long">
    select count(*) from s_version_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_version_manager
    <set>
      <if test="record.versionManagerId != null">
        version_manager_id = #{record.versionManagerId,jdbcType=BIGINT},
      </if>
      <if test="record.versionName != null">
        version_name = #{record.versionName,jdbcType=VARCHAR},
      </if>
      <if test="record.raiseTestDate != null">
        raise_test_date = #{record.raiseTestDate,jdbcType=DATE},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=DATE},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createName != null">
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.systemId != null">
        system_id = #{record.systemId,jdbcType=BIGINT},
      </if>
      <if test="record.versionDescribe != null">
        version_describe = #{record.versionDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update s_version_manager
    set version_manager_id = #{record.versionManagerId,jdbcType=BIGINT},
      version_name = #{record.versionName,jdbcType=VARCHAR},
      raise_test_date = #{record.raiseTestDate,jdbcType=DATE},
      release_date = #{record.releaseDate,jdbcType=DATE},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      system_id = #{record.systemId,jdbcType=BIGINT},
      version_describe = #{record.versionDescribe,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_version_manager
    set version_manager_id = #{record.versionManagerId,jdbcType=BIGINT},
      version_name = #{record.versionName,jdbcType=VARCHAR},
      raise_test_date = #{record.raiseTestDate,jdbcType=DATE},
      release_date = #{record.releaseDate,jdbcType=DATE},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      system_id = #{record.systemId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManager">
    update s_version_manager
    <set>
      <if test="versionName != null">
        version_name = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="raiseTestDate != null">
        raise_test_date = #{raiseTestDate,jdbcType=DATE},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=DATE},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        system_id = #{systemId,jdbcType=BIGINT},
      </if>
      <if test="versionDescribe != null">
        version_describe = #{versionDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where version_manager_id = #{versionManagerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManager">
    update s_version_manager
    set version_name = #{versionName,jdbcType=VARCHAR},
      raise_test_date = #{raiseTestDate,jdbcType=DATE},
      release_date = #{releaseDate,jdbcType=DATE},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      system_id = #{systemId,jdbcType=BIGINT},
      version_describe = #{versionDescribe,jdbcType=LONGVARCHAR}
    where version_manager_id = #{versionManagerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.versionmanagerv3.domain.SVersionManager">
    update s_version_manager
    set version_name = #{versionName,jdbcType=VARCHAR},
      raise_test_date = #{raiseTestDate,jdbcType=DATE},
      release_date = #{releaseDate,jdbcType=DATE},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      system_id = #{systemId,jdbcType=BIGINT}
    where version_manager_id = #{versionManagerId,jdbcType=BIGINT}
  </update>

  <select id="queryVersionManagerListByExample" resultType="com.yusys.agile.versionmanagerV3.SVersionManagerDTO">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_version_manager where state = 'U'
    <if test="searchKey != null and searchKey != ''">
      and (version_manager_id like concat('%',#{searchKey},'%') OR version_name like concat('%',#{searchKey},'%'))
    </if>
    <if test="systemId != null">
      AND system_id = #{systemId}
    </if>
  </select>
</mapper>