<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.headerfield.dao.HeaderFieldMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.headerfield.domain.HeaderField">
    <id column="field_id" jdbcType="BIGINT" property="fieldId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="field_code" jdbcType="VARCHAR" property="fieldCode" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="is_select" jdbcType="TINYINT" property="isSelect" />
    <result column="is_custom" jdbcType="TINYINT" property="isCustom" />
    <result column="field_type" jdbcType="TINYINT" property="fieldType" />
    <result column="category" jdbcType="TINYINT" property="category" />
    <result column="field_group" jdbcType="VARCHAR" property="fieldGroup" />
    <result column="sortable" jdbcType="TINYINT" property="sortable" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="required" jdbcType="VARCHAR" property="required" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="apply_type" jdbcType="VARCHAR" property="applyType" />
    <result column="apply" jdbcType="VARCHAR" property="apply" />
    <result column="system_id" jdbcType="BIGINT" property="systemId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.headerfield.domain.HeaderField">
    <result column="field_content" jdbcType="LONGVARCHAR" property="fieldContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    field_id, project_id, field_code, field_name, is_select, is_custom, field_type, category, 
    field_group, sortable, tenant_code, comment, required, state, apply_type, apply,system_id
  </sql>
  <sql id="Blob_Column_List">
    field_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.headerfield.domain.HeaderFieldExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_header_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.headerfield.domain.HeaderFieldExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_header_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_header_field
    where field_id = #{fieldId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_header_field
    where field_id = #{fieldId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.headerfield.domain.HeaderFieldExample">
    delete from s_header_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.headerfield.domain.HeaderField" useGeneratedKeys="true" keyProperty="field_id">
    insert into s_header_field (field_id, project_id, field_code,
      field_name, is_select, is_custom, 
      field_type, category, field_group, 
      sortable, tenant_code, comment, 
      required, state, apply_type, 
      apply, field_content,system_id)
    values (#{fieldId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{fieldCode,jdbcType=VARCHAR}, 
      #{fieldName,jdbcType=VARCHAR}, #{isSelect,jdbcType=TINYINT}, #{isCustom,jdbcType=TINYINT}, 
      #{fieldType,jdbcType=TINYINT}, #{category,jdbcType=TINYINT}, #{fieldGroup,jdbcType=VARCHAR}, 
      #{sortable,jdbcType=TINYINT}, #{tenantCode,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{required,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{applyType,jdbcType=VARCHAR}, 
      #{apply,jdbcType=VARCHAR}, #{fieldContent,jdbcType=LONGVARCHAR},#{systemId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.headerfield.domain.HeaderField" useGeneratedKeys="true" keyProperty="field_id">
    insert into s_header_field
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fieldId != null">
        field_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="fieldCode != null">
        field_code,
      </if>
      <if test="fieldName != null">
        field_name,
      </if>
      <if test="isSelect != null">
        is_select,
      </if>
      <if test="isCustom != null">
        is_custom,
      </if>
      <if test="fieldType != null">
        field_type,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="fieldGroup != null">
        field_group,
      </if>
      <if test="sortable != null">
        sortable,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="applyType != null">
        apply_type,
      </if>
      <if test="apply != null">
        apply,
      </if>
      <if test="fieldContent != null">
        field_content,
      </if>
      <if test="systemId != null">
        system_id,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fieldId != null">
        #{fieldId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="fieldCode != null">
        #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="isSelect != null">
        #{isSelect,jdbcType=TINYINT},
      </if>
      <if test="isCustom != null">
        #{isCustom,jdbcType=TINYINT},
      </if>
      <if test="fieldType != null">
        #{fieldType,jdbcType=TINYINT},
      </if>
      <if test="category != null">
        #{category,jdbcType=TINYINT},
      </if>
      <if test="fieldGroup != null">
        #{fieldGroup,jdbcType=VARCHAR},
      </if>
      <if test="sortable != null">
        #{sortable,jdbcType=TINYINT},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        #{required,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=VARCHAR},
      </if>
      <if test="apply != null">
        #{apply,jdbcType=VARCHAR},
      </if>
      <if test="fieldContent != null">
        #{fieldContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.headerfield.domain.HeaderFieldExample" resultType="java.lang.Long">
    select count(*) from s_header_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_header_field
    <set>
      <if test="record.fieldId != null">
        field_id = #{record.fieldId,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.fieldCode != null">
        field_code = #{record.fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldName != null">
        field_name = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.isSelect != null">
        is_select = #{record.isSelect,jdbcType=TINYINT},
      </if>
      <if test="record.isCustom != null">
        is_custom = #{record.isCustom,jdbcType=TINYINT},
      </if>
      <if test="record.fieldType != null">
        field_type = #{record.fieldType,jdbcType=TINYINT},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=TINYINT},
      </if>
      <if test="record.fieldGroup != null">
        field_group = #{record.fieldGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.sortable != null">
        sortable = #{record.sortable,jdbcType=TINYINT},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.required != null">
        required = #{record.required,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null">
        apply_type = #{record.applyType,jdbcType=VARCHAR},
      </if>
      <if test="record.apply != null">
        apply = #{record.apply,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldContent != null">
        field_content = #{record.fieldContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.systemId != null">
        system_id = #{record.systemId,jdbcType=BIGINT},
      </if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update s_header_field
    set field_id = #{record.fieldId,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      field_code = #{record.fieldCode,jdbcType=VARCHAR},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
      is_select = #{record.isSelect,jdbcType=TINYINT},
      is_custom = #{record.isCustom,jdbcType=TINYINT},
      field_type = #{record.fieldType,jdbcType=TINYINT},
      category = #{record.category,jdbcType=TINYINT},
      field_group = #{record.fieldGroup,jdbcType=VARCHAR},
      sortable = #{record.sortable,jdbcType=TINYINT},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      required = #{record.required,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      apply_type = #{record.applyType,jdbcType=VARCHAR},
      apply = #{record.apply,jdbcType=VARCHAR},
      field_content = #{record.fieldContent,jdbcType=LONGVARCHAR},
      system_id = #{record.systemId,jdbcType=BIGINT}

    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_header_field
    set field_id = #{record.fieldId,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      field_code = #{record.fieldCode,jdbcType=VARCHAR},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
      is_select = #{record.isSelect,jdbcType=TINYINT},
      is_custom = #{record.isCustom,jdbcType=TINYINT},
      field_type = #{record.fieldType,jdbcType=TINYINT},
      category = #{record.category,jdbcType=TINYINT},
      field_group = #{record.fieldGroup,jdbcType=VARCHAR},
      sortable = #{record.sortable,jdbcType=TINYINT},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      required = #{record.required,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      apply_type = #{record.applyType,jdbcType=VARCHAR},
      apply = #{record.apply,jdbcType=VARCHAR}
      system_id = #{record.systemId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.headerfield.domain.HeaderField">
    update s_header_field
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="fieldCode != null">
        field_code = #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        field_name = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="isSelect != null">
        is_select = #{isSelect,jdbcType=TINYINT},
      </if>
      <if test="isCustom != null">
        is_custom = #{isCustom,jdbcType=TINYINT},
      </if>
      <if test="fieldType != null">
        field_type = #{fieldType,jdbcType=TINYINT},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=TINYINT},
      </if>
      <if test="fieldGroup != null">
        field_group = #{fieldGroup,jdbcType=VARCHAR},
      </if>
      <if test="sortable != null">
        sortable = #{sortable,jdbcType=TINYINT},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        apply_type = #{applyType,jdbcType=VARCHAR},
      </if>
      <if test="apply != null">
        apply = #{apply,jdbcType=VARCHAR},
      </if>
      <if test="fieldContent != null">
        field_content = #{fieldContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="systemId != null">
        system_id = #{systemId,jdbcType=BIGINT},
      </if>

    </set>
    where field_id = #{fieldId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.headerfield.domain.HeaderField">
    update s_header_field
    set project_id = #{projectId,jdbcType=BIGINT},
      field_code = #{fieldCode,jdbcType=VARCHAR},
      field_name = #{fieldName,jdbcType=VARCHAR},
      is_select = #{isSelect,jdbcType=TINYINT},
      is_custom = #{isCustom,jdbcType=TINYINT},
      field_type = #{fieldType,jdbcType=TINYINT},
      category = #{category,jdbcType=TINYINT},
      field_group = #{fieldGroup,jdbcType=VARCHAR},
      sortable = #{sortable,jdbcType=TINYINT},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      required = #{required,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=VARCHAR},
      apply = #{apply,jdbcType=VARCHAR},
      field_content = #{fieldContent,jdbcType=LONGVARCHAR},
      system_id = #{systemId,jdbcType=BIGINT}
    where field_id = #{fieldId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.headerfield.domain.HeaderField">
    update s_header_field
    set project_id = #{projectId,jdbcType=BIGINT},
      field_code = #{fieldCode,jdbcType=VARCHAR},
      field_name = #{fieldName,jdbcType=VARCHAR},
      is_select = #{isSelect,jdbcType=TINYINT},
      is_custom = #{isCustom,jdbcType=TINYINT},
      field_type = #{fieldType,jdbcType=TINYINT},
      category = #{category,jdbcType=TINYINT},
      field_group = #{fieldGroup,jdbcType=VARCHAR},
      sortable = #{sortable,jdbcType=TINYINT},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      required = #{required,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=VARCHAR},
      apply = #{apply,jdbcType=VARCHAR},
    system_id = #{systemId,jdbcType=BIGINT}
    where field_id = #{fieldId,jdbcType=BIGINT}
  </update>

  <!-- -->
  <select id="selectDTOByExampleWithBLOBs" resultType="com.yusys.agile.headerfield.dto.HeaderFieldDTO">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_header_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>


  </select>

  <update id="updateStateByFieldCode">
    update s_header_field
    set state = #{state}
    where field_code = #{fieldCode}
  </update>
</mapper>