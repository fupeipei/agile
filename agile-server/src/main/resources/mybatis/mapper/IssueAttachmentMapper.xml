<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.issue.dao.IssueAttachmentMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.issue.domain.IssueAttachment">
    <id column="attachment_id" jdbcType="BIGINT" property="attachmentId" />
    <result column="issue_id" jdbcType="BIGINT" property="issueId" />
    <result column="file_uri" jdbcType="VARCHAR" property="fileUri" />
    <result column="stage_id" jdbcType="BIGINT" property="stageId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="upload_uid" jdbcType="BIGINT" property="uploadUid" />
    <result column="file_size" jdbcType="VARCHAR" property="fileSize" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="attachment_desc" jdbcType="VARCHAR" property="attachmentDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attachment_id, issue_id, file_uri, stage_id, file_name, upload_time, upload_uid,
    file_size,tenant_code,attachment_desc
  </sql>
  <select id="selectByExample" parameterType="com.yusys.agile.issue.domain.IssueAttachmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from issue_attachment
    where attachment_id = #{attachmentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from issue_attachment
    where attachment_id = #{attachmentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.issue.domain.IssueAttachmentExample">
    delete from issue_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.issue.domain.IssueAttachment">
    insert into issue_attachment (attachment_id, issue_id, file_uri, 
      stage_id, file_name, upload_time, 
      upload_uid, file_size,tenant_code)
    values (#{attachmentId,jdbcType=BIGINT}, #{issueId,jdbcType=BIGINT}, #{fileUri,jdbcType=VARCHAR}, 
      #{stageId,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{uploadTime,jdbcType=TIMESTAMP}, 
      #{uploadUid,jdbcType=BIGINT}, #{fileSize,jdbcType=VARCHAR},#{tenantCode})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.issue.domain.IssueAttachment">
    insert into issue_attachment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attachmentId != null">
        attachment_id,
      </if>
      <if test="issueId != null">
        issue_id,
      </if>
      <if test="fileUri != null">
        file_uri,
      </if>
      <if test="stageId != null">
        stage_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="uploadUid != null">
        upload_uid,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attachmentId != null">
        #{attachmentId,jdbcType=BIGINT},
      </if>
      <if test="issueId != null">
        #{issueId,jdbcType=BIGINT},
      </if>
      <if test="fileUri != null">
        #{fileUri,jdbcType=VARCHAR},
      </if>
      <if test="stageId != null">
        #{stageId,jdbcType=BIGINT},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadUid != null">
        #{uploadUid,jdbcType=BIGINT},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.issue.domain.IssueAttachmentExample" resultType="java.lang.Long">
    select count(*) from issue_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update issue_attachment
    <set>
      <if test="record.attachmentId != null">
        attachment_id = #{record.attachmentId,jdbcType=BIGINT},
      </if>
      <if test="record.issueId != null">
        issue_id = #{record.issueId,jdbcType=BIGINT},
      </if>
      <if test="record.fileUri != null">
        file_uri = #{record.fileUri,jdbcType=VARCHAR},
      </if>
      <if test="record.stageId != null">
        stage_id = #{record.stageId,jdbcType=BIGINT},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null">
        upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uploadUid != null">
        upload_uid = #{record.uploadUid,jdbcType=BIGINT},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update issue_attachment
    set attachment_id = #{record.attachmentId,jdbcType=BIGINT},
      issue_id = #{record.issueId,jdbcType=BIGINT},
      file_uri = #{record.fileUri,jdbcType=VARCHAR},
      stage_id = #{record.stageId,jdbcType=BIGINT},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      upload_uid = #{record.uploadUid,jdbcType=BIGINT},
      file_size = #{record.fileSize,jdbcType=VARCHAR},
    tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.issue.domain.IssueAttachment">
    update issue_attachment
    <set>
      <if test="issueId != null">
        issue_id = #{issueId,jdbcType=BIGINT},
      </if>
      <if test="fileUri != null">
        file_uri = #{fileUri,jdbcType=VARCHAR},
      </if>
      <if test="stageId != null">
        stage_id = #{stageId,jdbcType=BIGINT},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadUid != null">
        upload_uid = #{uploadUid,jdbcType=BIGINT},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="attachmentDesc != null">
        attachment_desc = #{attachmentDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where attachment_id = #{attachmentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.issue.domain.IssueAttachment">
    update issue_attachment
    set issue_id = #{issueId,jdbcType=BIGINT},
      file_uri = #{fileUri,jdbcType=VARCHAR},
      stage_id = #{stageId,jdbcType=BIGINT},
      file_name = #{fileName,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      upload_uid = #{uploadUid,jdbcType=BIGINT},
      file_size = #{fileSize,jdbcType=VARCHAR},
       tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where attachment_id = #{attachmentId,jdbcType=BIGINT}
  </update>

  <insert id="createBatchAttachment">
    INSERT INTO issue_attachment (issue_id,file_uri,file_name,stage_id,upload_time,upload_uid,tenant_code,attachment_desc)
    VALUES
    <foreach collection="newAttachments" item="item"  separator=",">
      (#{item.issueId},#{item.fileUri},#{item.fileName},#{item.stageId},now(),#{item.uploadUid},#{item.tenantCode},#{item.attachmentDesc})
    </foreach>
  </insert>
</mapper>