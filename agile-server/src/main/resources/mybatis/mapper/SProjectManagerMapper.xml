<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.projectmanager.dao.SProjectManagerMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.projectmanager.domain.SProjectManager">
    <id column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
    <result column="principal" jdbcType="BIGINT" property="principal" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="project_status_id" jdbcType="BIGINT" property="projectStatusId" />
    <result column="project_type_id" jdbcType="BIGINT" property="projectTypeId" />
    <result column="research_model_id" jdbcType="BIGINT" property="researchModelId" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.projectmanager.domain.SProjectManager">
    <result column="project_content" jdbcType="LONGVARCHAR" property="projectContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    project_id, project_name, project_code, principal, start_time, end_time, project_status_id, 
    project_type_id, research_model_id, create_uid, create_time, update_uid, update_time, 
    tenant_code, state
  </sql>
  <sql id="Blob_Column_List">
    project_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.projectmanager.domain.SProjectManagerExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_project_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.projectmanager.domain.SProjectManagerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_project_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_project_manager
    where project_id = #{projectId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_project_manager
    where project_id = #{projectId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.projectmanager.domain.SProjectManagerExample">
    delete from s_project_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.projectmanager.domain.SProjectManager">
    insert into s_project_manager (project_id, project_name, project_code, 
      principal, start_time, end_time, 
      project_status_id, project_type_id, research_model_id, 
      create_uid, create_time, update_uid, 
      update_time, tenant_code, state, 
      project_content)
    values (#{projectId,jdbcType=BIGINT}, #{projectName,jdbcType=VARCHAR}, #{projectCode,jdbcType=VARCHAR}, 
      #{principal,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{projectStatusId,jdbcType=BIGINT}, #{projectTypeId,jdbcType=BIGINT}, #{researchModelId,jdbcType=BIGINT}, 
      #{createUid,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUid,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{tenantCode,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{projectContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.projectmanager.domain.SProjectManager" useGeneratedKeys="true" keyProperty="projectId">
    insert into s_project_manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <!--<if test="projectId != null">
        project_id,
      </if>-->
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectCode != null">
        project_code,
      </if>
      <if test="principal != null">
        principal,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="projectStatusId != null">
        project_status_id,
      </if>
      <if test="projectTypeId != null">
        project_type_id,
      </if>
      <if test="researchModelId != null">
        research_model_id,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="projectContent != null">
        project_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <!--<if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>-->
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCode != null">
        #{projectCode,jdbcType=VARCHAR},
      </if>
      <if test="principal != null">
        #{principal,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatusId != null">
        #{projectStatusId,jdbcType=BIGINT},
      </if>
      <if test="projectTypeId != null">
        #{projectTypeId,jdbcType=BIGINT},
      </if>
      <if test="researchModelId != null">
        #{researchModelId,jdbcType=BIGINT},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="projectContent != null">
        #{projectContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.projectmanager.domain.SProjectManagerExample" resultType="java.lang.Long">
    select count(*) from s_project_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_project_manager
    <set>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectCode != null">
        project_code = #{record.projectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.principal != null">
        principal = #{record.principal,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectStatusId != null">
        project_status_id = #{record.projectStatusId,jdbcType=BIGINT},
      </if>
      <if test="record.projectTypeId != null">
        project_type_id = #{record.projectTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.researchModelId != null">
        research_model_id = #{record.researchModelId,jdbcType=BIGINT},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.projectContent != null">
        project_content = #{record.projectContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update s_project_manager
    set project_id = #{record.projectId,jdbcType=BIGINT},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      project_code = #{record.projectCode,jdbcType=VARCHAR},
      principal = #{record.principal,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      project_status_id = #{record.projectStatusId,jdbcType=BIGINT},
      project_type_id = #{record.projectTypeId,jdbcType=BIGINT},
      research_model_id = #{record.researchModelId,jdbcType=BIGINT},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      project_content = #{record.projectContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_project_manager
    set project_id = #{record.projectId,jdbcType=BIGINT},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      project_code = #{record.projectCode,jdbcType=VARCHAR},
      principal = #{record.principal,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      project_status_id = #{record.projectStatusId,jdbcType=BIGINT},
      project_type_id = #{record.projectTypeId,jdbcType=BIGINT},
      research_model_id = #{record.researchModelId,jdbcType=BIGINT},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.projectmanager.domain.SProjectManager">
    update s_project_manager
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCode != null">
        project_code = #{projectCode,jdbcType=VARCHAR},
      </if>
      <if test="principal != null">
        principal = #{principal,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatusId != null">
        project_status_id = #{projectStatusId,jdbcType=BIGINT},
      </if>
      <if test="projectTypeId != null">
        project_type_id = #{projectTypeId,jdbcType=BIGINT},
      </if>
      <if test="researchModelId != null">
        research_model_id = #{researchModelId,jdbcType=BIGINT},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="projectContent != null">
        project_content = #{projectContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.projectmanager.domain.SProjectManager">
    update s_project_manager
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_code = #{projectCode,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      project_status_id = #{projectStatusId,jdbcType=BIGINT},
      project_type_id = #{projectTypeId,jdbcType=BIGINT},
      research_model_id = #{researchModelId,jdbcType=BIGINT},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      project_content = #{projectContent,jdbcType=LONGVARCHAR}
    where project_id = #{projectId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.projectmanager.domain.SProjectManager">
    update s_project_manager
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_code = #{projectCode,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      project_status_id = #{projectStatusId,jdbcType=BIGINT},
      project_type_id = #{projectTypeId,jdbcType=BIGINT},
      research_model_id = #{researchModelId,jdbcType=BIGINT},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where project_id = #{projectId,jdbcType=BIGINT}
  </update>

  <select id="queryProjectManagerList" parameterType="map" resultType="com.yusys.agile.projectmanager.dto.ProjectManagerDto">
    SELECT spm.project_id,spm.project_name,spm.project_code,spm.project_code,spm.end_time,spm.principal,sspd.name FROM agile.s_project_manager spm
      left join agile.s_static_project_data sspd on sspd.static_project_data_id = spm.project_status_id
    WHERE spm.state = 'U'
          <if test="searchKey != null and searchKey != ''">
            AND (spm.project_code LIKE CONCAT('%',#{searchKey},'%') OR spm.project_name LIKE CONCAT('%',#{searchKey},'%'))
          </if>
  </select>

  <select id="queryProjectManagerListByUserId" parameterType="map" resultType="com.yusys.agile.projectmanager.dto.ProjectManagerDto">
    SELECT distinct spm.project_id, spm.project_name, spm.project_code, spm.principal, spm.start_time, spm.end_time, spm.project_status_id,
           spm.project_type_id, spm.research_model_id
            FROM s_project_manager spm ,s_project_user_rel spur
    WHERE spm.state = 'U' AND spm.project_id = spur.project_id AND spur.user_id = #{userId}
  </select>
  <select id="queryProjectManagerInfo" parameterType="long" resultType="com.yusys.agile.projectmanager.domain.SProjectManager">
      SELECT project_id,end_time FROM s_project_manager WHERE project_id = #{projectId}
  </select>
</mapper>