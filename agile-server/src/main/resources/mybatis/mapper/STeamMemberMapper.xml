<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.teamv3.dao.STeamMemberMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.teamv3.domain.STeamMember">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="team_id" jdbcType="BIGINT" property="teamId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="system_id" jdbcType="BIGINT" property="systemId" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_uid" jdbcType="BIGINT" property="updateUid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, team_id, user_id, user_account, user_name, role_id, system_id, create_uid, create_time, 
    update_uid, update_time, tenant_code
  </sql>
  <select id="selectByExample" parameterType="com.yusys.agile.teamv3.domain.STeamMemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_team_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_team_member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_team_member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.teamv3.domain.STeamMemberExample">
    delete from s_team_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.teamv3.domain.STeamMember">
    insert into s_team_member (id, team_id, user_id, 
      user_account, user_name, role_id, 
      system_id, create_uid, create_time, 
      update_uid, update_time, tenant_code
      )
    values (#{id,jdbcType=BIGINT}, #{teamId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{userAccount,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{systemId,jdbcType=BIGINT}, #{createUid,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUid,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{tenantCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.teamv3.domain.STeamMember">
    insert into s_team_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="systemId != null">
        system_id,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=BIGINT},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.teamv3.domain.STeamMemberExample" resultType="java.lang.Long">
    select count(*) from s_team_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_team_member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.teamId != null">
        team_id = #{record.teamId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userAccount != null">
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.systemId != null">
        system_id = #{record.systemId,jdbcType=BIGINT},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_team_member
    set id = #{record.id,jdbcType=BIGINT},
      team_id = #{record.teamId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      system_id = #{record.systemId,jdbcType=BIGINT},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_uid = #{record.updateUid,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.teamv3.domain.STeamMember">
    update s_team_member
    <set>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="systemId != null">
        system_id = #{systemId,jdbcType=BIGINT},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.teamv3.domain.STeamMember">
    update s_team_member
    set team_id = #{teamId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      user_account = #{userAccount,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      system_id = #{systemId,jdbcType=BIGINT},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_uid = #{updateUid,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert">
    insert into s_team_member (team_id, user_id,
      user_account, user_name, role_id,
      system_id, create_uid, create_time,
      update_uid, update_time, tenant_code
      )
    values
    <foreach collection="users" item="user" separator=",">
    (#{team.teamId}, #{user.userId},
      #{user.userAccount}, #{user.userName}, #{roleId},
      #{user.systemId}, #{team.createUid}, #{team.createTime},
      #{team.updateUid}, #{team.updateTime}, #{team.tenantCode}
      )
    </foreach>
  </insert>

  <delete id="deleteByTeamId">
    delete from s_team_member where team_id = #{teamId}
  </delete>

  <select id="selectByTeamIdAndRoleId" resultType="com.yusys.agile.team.dto.TeamUserDTO">
    select
    id, team_id, user_id, user_account, user_name, role_id, system_id
    from s_team_member
    where team_id = #{teamId} and role_id = #{roleId}
  </select>

  <select id="selectByTeamIds" resultType="com.yusys.agile.team.dto.TeamUserDTO">
    select
    id, team_id, user_id, user_account, user_name, role_id, system_id
    from s_team_member
    where
    <choose>
        <when test="teamIds != null and teamIds.size > 0">
            team_id in
            <foreach collection="teamIds" item="teamId" open="(" separator="," close=")">
                #{teamId}
            </foreach>
        </when>
        <otherwise>
            1=0
        </otherwise>
    </choose>
  </select>
</mapper>