<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yusys.agile.businesskanban.dao.BusinessHistoryRecordMapper">
  <resultMap id="BaseResultMap" type="com.yusys.agile.businesskanban.domain.BusinessHistoryRecord">
    <id column="record_id" jdbcType="BIGINT" property="recordId" />
    <result column="operation_field" jdbcType="VARCHAR" property="operationField" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_uid" jdbcType="BIGINT" property="createUid" />
    <result column="business_id" jdbcType="BIGINT" property="businessId" />
    <result column="record_type" jdbcType="TINYINT" property="recordType" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordWithBLOBs">
    <result column="old_value" jdbcType="LONGVARCHAR" property="oldValue" />
    <result column="new_value" jdbcType="LONGVARCHAR" property="newValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, operation_field, create_time, create_uid, business_id, record_type, label,tenant_code
  </sql>
  <sql id="Blob_Column_List">
    old_value, new_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from business_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from business_history_record
    where record_id = #{recordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from business_history_record
    where record_id = #{recordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordExample">
    delete from business_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordWithBLOBs">
    insert into business_history_record (record_id, operation_field, create_time, 
      create_uid, business_id, record_type, 
      label, old_value, new_value,tenant_code
      )
    values (#{recordId,jdbcType=BIGINT}, #{operationField,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUid,jdbcType=BIGINT}, #{businessId,jdbcType=BIGINT}, #{recordType,jdbcType=TINYINT}, 
      #{label,jdbcType=VARCHAR}, #{oldValue,jdbcType=LONGVARCHAR}, #{newValue,jdbcType=LONGVARCHAR},
      #{tenantCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordWithBLOBs">
    insert into business_history_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="operationField != null">
        operation_field,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="recordType != null">
        record_type,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="oldValue != null">
        old_value,
      </if>
      <if test="newValue != null">
        new_value,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=BIGINT},
      </if>
      <if test="operationField != null">
        #{operationField,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=BIGINT},
      </if>
      <if test="recordType != null">
        #{recordType,jdbcType=TINYINT},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="oldValue != null">
        #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null">
        #{newValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordExample" resultType="java.lang.Long">
    select count(*) from business_history_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update business_history_record
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=BIGINT},
      </if>
      <if test="record.operationField != null">
        operation_field = #{record.operationField,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.businessId != null">
        business_id = #{record.businessId,jdbcType=BIGINT},
      </if>
      <if test="record.recordType != null">
        record_type = #{record.recordType,jdbcType=TINYINT},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.oldValue != null">
        old_value = #{record.oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.newValue != null">
        new_value = #{record.newValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update business_history_record
    set record_id = #{record.recordId,jdbcType=BIGINT},
      operation_field = #{record.operationField,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      business_id = #{record.businessId,jdbcType=BIGINT},
      record_type = #{record.recordType,jdbcType=TINYINT},
      label = #{record.label,jdbcType=VARCHAR},
      old_value = #{record.oldValue,jdbcType=LONGVARCHAR},
      new_value = #{record.newValue,jdbcType=LONGVARCHAR},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update business_history_record
    set record_id = #{record.recordId,jdbcType=BIGINT},
      operation_field = #{record.operationField,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      business_id = #{record.businessId,jdbcType=BIGINT},
      record_type = #{record.recordType,jdbcType=TINYINT},
      label = #{record.label,jdbcType=VARCHAR},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordWithBLOBs">
    update business_history_record
    <set>
      <if test="operationField != null">
        operation_field = #{operationField,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=BIGINT},
      </if>
      <if test="recordType != null">
        record_type = #{recordType,jdbcType=TINYINT},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="oldValue != null">
        old_value = #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null">
        new_value = #{newValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecordWithBLOBs">
    update business_history_record
    set operation_field = #{operationField,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_uid = #{createUid,jdbcType=BIGINT},
      business_id = #{businessId,jdbcType=BIGINT},
      record_type = #{recordType,jdbcType=TINYINT},
      label = #{label,jdbcType=VARCHAR},
      old_value = #{oldValue,jdbcType=LONGVARCHAR},
      new_value = #{newValue,jdbcType=LONGVARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yusys.agile.businesskanban.domain.BusinessHistoryRecord">
    update business_history_record
    set operation_field = #{operationField,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_uid = #{createUid,jdbcType=BIGINT},
      business_id = #{businessId,jdbcType=BIGINT},
      record_type = #{recordType,jdbcType=TINYINT},
      label = #{label,jdbcType=VARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR}
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>

    <insert id="batchCreate" >
      insert into business_history_record (
      record_id, operation_field, create_time,
      create_uid, business_id, record_type,
      label, old_value, new_value,tenant_code
      )
      values
      <foreach collection="collection" separator="," item="history">
        (
        #{history.recordId,jdbcType=BIGINT}, #{history.operationField,jdbcType=VARCHAR}, now(),
        #{history.createUid,jdbcType=BIGINT}, #{history.businessId,jdbcType=BIGINT}, #{history.recordType,jdbcType=TINYINT},
        #{history.label,jdbcType=VARCHAR}, #{history.oldValue,jdbcType=LONGVARCHAR}, #{history.newValue,jdbcType=LONGVARCHAR},
        #{history.tenantCode,jdbcType=VARCHAR}
        )
      </foreach>
    </insert>
</mapper>